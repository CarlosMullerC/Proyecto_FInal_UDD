{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1D1mrBAGvCc9o2VMybhBzJqmH4ot3azdA","timestamp":1722279664326},{"file_id":"1rk2A-BKiKA9mmSnD40hyjMpAUSYAQSak","timestamp":1722277017009},{"file_id":"14mJtiRnHt6IQc4OnkBEJiCZTwJxVzcwb","timestamp":1721928001902}],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## **Bootcamp: Ciencia de Datos e Inteligencia Artificial**\n","## **Proyecto del Módulo 7: Técnicas avanzadas para ciencia de datos y empleabilidad**\n","\n","Hola, ya es el último proyecto, has avanzado y aprendido mucho hasta acá. ¡Muchas felicidades!\n","\n","Es hora de poner en práctica todo lo que hemos aprendido a lo largo de nuestra travesía.\n","\n","Lee el proyecto y revisa con cuidado cada una de las instrucciones. Procura plasmar todo tu potencial para que lo concluyas de manera sobresaliente.\n","\n","¡Éxito!"],"metadata":{"id":"tP4QvuPIdTNJ"}},{"cell_type":"markdown","source":["# Objetivos\n","- Aplicar con éxito todos los conocimientos que has adquirido a lo largo del Bootcamp.\n","- Consolidar las técnicas de limpieza, entrenamiento, graficación y ajuste a modelos de *Machine Learning*.\n","- Generar una API que brinde predicciones como resultado a partir de datos enviados.\n"],"metadata":{"id":"urHRQIXyd2qi"}},{"cell_type":"markdown","source":["# Proyecto\n","\n","1. Selecciona uno de los siguientes *datasets*:\n","  - Imágenes de rayos X de pecho para detectar neumonía: https://www.kaggle.com/datasets/paultimothymooney/chest-xray-pneumonia\n","  - *Reviews* de aplicaciones de la Google Play Store: https://www.kaggle.com/datasets/lava18/google-play-store-apps\n","  - Estadísticas demográficas de los ganadores del premio Oscar de la Academia: https://www.kaggle.com/datasets/fmejia21/demographics-of-academy-awards-oscars-winners\n","  - Aspiraciones profesionales de la generación Z: https://www.kaggle.com/datasets/kulturehire/understanding-career-aspirations-of-genz\n","\n","Cada uno representa un *dataset*, un problema y una forma diferente de abordarlo. Tu tarea es identificar las técnicas y modelos que podrías usar para tu proyecto.\n","\n","2. Debes hacer un análisis exploratorio y limpieza de los datos. Usa las ténicas que creas convenientes.\n","\n","3. Entrena el modelo de *Machine Learning*, procesamiento de lenguaje natural o red neuronal que creas adecuado.\n","\n","4. Genera por lo menos dos gráficas y dos métricas de rendimiento; explica las puntuaciones de rendimiento que amerite tu problema. Todas las gráficas de rendimiento que realices deben tener leyendas, colores y títulos personalizados por ti.\n","\n","  - Además, antes de subir el modelo a \"producción\", deberás realizar un proceso de ensambles (*ensemblings*) y de ajuste de hiperparámetros o *tuning* para intentar mejorar la precisión y disminuir la varianza de tu modelo.\n","\n","5. Construye una API REST en la que cualquier usuario pueda mandar datos y que esta misma devuelva la predicción del modelo que has hecho. La API debe estar en la nube, ya sea en un servicio como Netlify o Ngrok, para que pueda ser consultada desde internet.\n","\n","6. Genera una presentación del problema y del modelo de solución que planteas. Muestra gráficas, datos de rendimiento y explicaciones. Esta presentación debe estar enfocada a personas que no sepan mucho de ciencia de datos e inteligencia artificial.\n","\n","7. **Solamente se recibirán trabajos subidos a tu cuenta de GitHub con un README.md apropiado que explique tu proyecto**.\n","\n","## Criterios de evaluación\n","\n","| Actividad | Porcentaje | Observaciones | Punto parcial\n","| -- | -- | -- | -- |\n","| Actividad 1. Limpieza y EDA | 20 | Realiza todas las tareas necesarias para hacer el EDA y la limpieza correcta, dependiendo de la problemática. Debes hacer como mínimo el análisis de completitud, escalamiento (si aplica) y tokenización (si aplica). | Realizaste solo algunas tareas de exploración y limpieza y el modelo se muestra aún con oportunidad de completitud, escalamiento y/o mejora. |\n","| Actividad 2. Entrenamiento del modelo | 20 | Elige el modelo y algoritmo adecuados para tu problema, entrénalo con los datos ya limpios y genera algunas predicciones de prueba. | No has realizado predicciones de prueba para tu modelo de ML y/o tu modelo muestra una precisión menor al 60 %. |\n","| Actividad 3. Graficación y métricas | 20 | Genera por lo menos dos gráficas y dos muestras de métricas que permitan visualizar el rendimiento y precisión del modelo que construiste. Además, realizaste los procesos de *tuning* y ensambles adecuados para tu problema. | Las gráficas no tienen leyendas y colores customizados, solo muestras una gráfica o no realizaste el *tuning* de hiperparámetros.\n","| Actividad 4. API REST | 20 | Generaste con éxito un *link* público en el que, por método POST, se puede mandar información y la API REST devuelve una predicción junto con el porcentaje de confianza de esta misma. | N/A\n","| Actividad 5. Presentación | 20 | Genera una presentación en la que establezcas como mínimo: el problema, proceso de solución, metodologías usadas, gráficas de rendimiento, demostración del modelo y aprendizajes obtenidos. Debes redactarla con términos que pueda entender cualquier persona, no solo científicos de datos. | La presentación no expone con claridad o en términos coloquiales el proceso de creación del modelo, sus ventajas y muestras de rendimiento.\n","\n","**Mucho éxito en tu camino como Data Scientist.**"],"metadata":{"id":"0P7GcQKhexHj"}},{"cell_type":"markdown","source":["## Librerias"],"metadata":{"id":"XEJWvtBNiMk0"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import joblib\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler, LabelEncoder\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import confusion_matrix, classification_report, roc_curve, auc\n","from sklearn.linear_model import Ridge\n","from sklearn.ensemble import RandomForestRegressor\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n","from sklearn.impute import SimpleImputer\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor, AdaBoostRegressor\n","from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier, AdaBoostClassifier"],"metadata":{"id":"mQkrqhpcheQs","executionInfo":{"status":"ok","timestamp":1722285025770,"user_tz":240,"elapsed":314,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":586,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"2b3RVGaGhm0F","executionInfo":{"status":"ok","timestamp":1722285028222,"user_tz":240,"elapsed":2143,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"8a1ef722-9f61-443b-bea0-5f0202ea1035","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":587,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/MyDrive/UDD DS AI/Modulo 7/Prueba 7/googleplaystore.csv')"],"metadata":{"id":"xEbvOtWRhn06","executionInfo":{"status":"ok","timestamp":1722285028222,"user_tz":240,"elapsed":5,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":588,"outputs":[]},{"cell_type":"code","source":["df_reviews = pd.read_csv('/content/drive/MyDrive/UDD DS AI/Modulo 7/Prueba 7/googleplaystore_user_reviews.csv')"],"metadata":{"id":"FiFQ3bM9ie1c","executionInfo":{"status":"ok","timestamp":1722285028223,"user_tz":240,"elapsed":4,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":589,"outputs":[]},{"cell_type":"markdown","source":["## Analisis exploratorio de DF - googleplaystore.cvs"],"metadata":{"id":"xc3VExQgiyIw"}},{"cell_type":"code","source":["df.head()"],"metadata":{"id":"im2zgrNBiw4A","executionInfo":{"status":"ok","timestamp":1722285028785,"user_tz":240,"elapsed":566,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"1a5efe48-5849-4f26-9d14-997ee0918d90","colab":{"base_uri":"https://localhost:8080/","height":573}},"execution_count":590,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                 App        Category  Rating  \\\n","0     Photo Editor & Candy Camera & Grid & ScrapBook  ART_AND_DESIGN     4.1   \n","1                                Coloring book moana  ART_AND_DESIGN     3.9   \n","2  U Launcher Lite – FREE Live Cool Themes, Hide ...  ART_AND_DESIGN     4.7   \n","3                              Sketch - Draw & Paint  ART_AND_DESIGN     4.5   \n","4              Pixel Draw - Number Art Coloring Book  ART_AND_DESIGN     4.3   \n","\n","  Reviews  Size     Installs  Type Price Content Rating  \\\n","0     159   19M      10,000+  Free     0       Everyone   \n","1     967   14M     500,000+  Free     0       Everyone   \n","2   87510  8.7M   5,000,000+  Free     0       Everyone   \n","3  215644   25M  50,000,000+  Free     0           Teen   \n","4     967  2.8M     100,000+  Free     0       Everyone   \n","\n","                      Genres      Last Updated         Current Ver  \\\n","0               Art & Design   January 7, 2018               1.0.0   \n","1  Art & Design;Pretend Play  January 15, 2018               2.0.0   \n","2               Art & Design    August 1, 2018               1.2.4   \n","3               Art & Design      June 8, 2018  Varies with device   \n","4    Art & Design;Creativity     June 20, 2018                 1.1   \n","\n","    Android Ver  \n","0  4.0.3 and up  \n","1  4.0.3 and up  \n","2  4.0.3 and up  \n","3    4.2 and up  \n","4    4.4 and up  "],"text/html":["\n","  <div id=\"df-8e599638-6707-4f7f-8812-1425402b8115\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>App</th>\n","      <th>Category</th>\n","      <th>Rating</th>\n","      <th>Reviews</th>\n","      <th>Size</th>\n","      <th>Installs</th>\n","      <th>Type</th>\n","      <th>Price</th>\n","      <th>Content Rating</th>\n","      <th>Genres</th>\n","      <th>Last Updated</th>\n","      <th>Current Ver</th>\n","      <th>Android Ver</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Photo Editor &amp; Candy Camera &amp; Grid &amp; ScrapBook</td>\n","      <td>ART_AND_DESIGN</td>\n","      <td>4.1</td>\n","      <td>159</td>\n","      <td>19M</td>\n","      <td>10,000+</td>\n","      <td>Free</td>\n","      <td>0</td>\n","      <td>Everyone</td>\n","      <td>Art &amp; Design</td>\n","      <td>January 7, 2018</td>\n","      <td>1.0.0</td>\n","      <td>4.0.3 and up</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Coloring book moana</td>\n","      <td>ART_AND_DESIGN</td>\n","      <td>3.9</td>\n","      <td>967</td>\n","      <td>14M</td>\n","      <td>500,000+</td>\n","      <td>Free</td>\n","      <td>0</td>\n","      <td>Everyone</td>\n","      <td>Art &amp; Design;Pretend Play</td>\n","      <td>January 15, 2018</td>\n","      <td>2.0.0</td>\n","      <td>4.0.3 and up</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>U Launcher Lite – FREE Live Cool Themes, Hide ...</td>\n","      <td>ART_AND_DESIGN</td>\n","      <td>4.7</td>\n","      <td>87510</td>\n","      <td>8.7M</td>\n","      <td>5,000,000+</td>\n","      <td>Free</td>\n","      <td>0</td>\n","      <td>Everyone</td>\n","      <td>Art &amp; Design</td>\n","      <td>August 1, 2018</td>\n","      <td>1.2.4</td>\n","      <td>4.0.3 and up</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sketch - Draw &amp; Paint</td>\n","      <td>ART_AND_DESIGN</td>\n","      <td>4.5</td>\n","      <td>215644</td>\n","      <td>25M</td>\n","      <td>50,000,000+</td>\n","      <td>Free</td>\n","      <td>0</td>\n","      <td>Teen</td>\n","      <td>Art &amp; Design</td>\n","      <td>June 8, 2018</td>\n","      <td>Varies with device</td>\n","      <td>4.2 and up</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Pixel Draw - Number Art Coloring Book</td>\n","      <td>ART_AND_DESIGN</td>\n","      <td>4.3</td>\n","      <td>967</td>\n","      <td>2.8M</td>\n","      <td>100,000+</td>\n","      <td>Free</td>\n","      <td>0</td>\n","      <td>Everyone</td>\n","      <td>Art &amp; Design;Creativity</td>\n","      <td>June 20, 2018</td>\n","      <td>1.1</td>\n","      <td>4.4 and up</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e599638-6707-4f7f-8812-1425402b8115')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8e599638-6707-4f7f-8812-1425402b8115 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8e599638-6707-4f7f-8812-1425402b8115');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-12a871fe-d994-4ce1-a50d-f15a347729d5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-12a871fe-d994-4ce1-a50d-f15a347729d5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-12a871fe-d994-4ce1-a50d-f15a347729d5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 10841,\n  \"fields\": [\n    {\n      \"column\": \"App\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9660,\n        \"samples\": [\n          \"Run R Script - Online Statistical Data Analysis\",\n          \"EURES - Your Job in Europe\",\n          \"Dog Licks Screen Wallpaper\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 34,\n        \"samples\": [\n          \"LIBRARIES_AND_DEMO\",\n          \"MEDICAL\",\n          \"PRODUCTIVITY\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5374313031477587,\n        \"min\": 1.0,\n        \"max\": 19.0,\n        \"num_unique_values\": 40,\n        \"samples\": [\n          5.0,\n          3.4,\n          3.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reviews\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6002,\n        \"samples\": [\n          \"66661\",\n          \"7479\",\n          \"8978\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Size\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 462,\n        \"samples\": [\n          \"746k\",\n          \"9.4M\",\n          \"35M\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Installs\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 22,\n        \"samples\": [\n          \"10,000+\",\n          \"50+\",\n          \"5,000+\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Free\",\n          \"Paid\",\n          \"0\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 93,\n        \"samples\": [\n          \"$17.99\",\n          \"$29.99\",\n          \"$37.99\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Content Rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Everyone\",\n          \"Teen\",\n          \"Unrated\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genres\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 120,\n        \"samples\": [\n          \"Casual;Action & Adventure\",\n          \"Board\",\n          \"Auto & Vehicles\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last Updated\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1378,\n        \"samples\": [\n          \"March 15, 2016\",\n          \"May 14, 2013\",\n          \"October 21, 2015\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Current Ver\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2832,\n        \"samples\": [\n          \"7.0.4.17908\",\n          \"1.2.5.4-11\",\n          \"2.5.7.1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Android Ver\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 33,\n        \"samples\": [\n          \"2.2 - 7.1.1\",\n          \"7.0 and up\",\n          \"3.1 and up\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":590}]},{"cell_type":"code","source":["df.shape"],"metadata":{"id":"kqipKaSnjME-","executionInfo":{"status":"ok","timestamp":1722285028785,"user_tz":240,"elapsed":66,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"4c8240f7-69c1-459b-e014-be2de302cd73","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":591,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10841, 13)"]},"metadata":{},"execution_count":591}]},{"cell_type":"code","source":["df.info()"],"metadata":{"id":"01eJNfxvi2fZ","executionInfo":{"status":"ok","timestamp":1722285028785,"user_tz":240,"elapsed":61,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"ca82d847-3b04-4d69-837c-3bff7203c29f","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":592,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 10841 entries, 0 to 10840\n","Data columns (total 13 columns):\n"," #   Column          Non-Null Count  Dtype  \n","---  ------          --------------  -----  \n"," 0   App             10841 non-null  object \n"," 1   Category        10841 non-null  object \n"," 2   Rating          9367 non-null   float64\n"," 3   Reviews         10841 non-null  object \n"," 4   Size            10841 non-null  object \n"," 5   Installs        10841 non-null  object \n"," 6   Type            10840 non-null  object \n"," 7   Price           10841 non-null  object \n"," 8   Content Rating  10840 non-null  object \n"," 9   Genres          10841 non-null  object \n"," 10  Last Updated    10841 non-null  object \n"," 11  Current Ver     10833 non-null  object \n"," 12  Android Ver     10838 non-null  object \n","dtypes: float64(1), object(12)\n","memory usage: 1.1+ MB\n"]}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8cplSEBVAL8V","executionInfo":{"status":"ok","timestamp":1722285028786,"user_tz":240,"elapsed":59,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"1e9bae89-3bdb-417d-b3a1-d6fc246ba044"},"execution_count":593,"outputs":[{"output_type":"execute_result","data":{"text/plain":["App                  0\n","Category             0\n","Rating            1474\n","Reviews              0\n","Size                 0\n","Installs             0\n","Type                 1\n","Price                0\n","Content Rating       1\n","Genres               0\n","Last Updated         0\n","Current Ver          8\n","Android Ver          3\n","dtype: int64"]},"metadata":{},"execution_count":593}]},{"cell_type":"code","source":["#Eliminamos valores nulos de las coumnas\n","columnas_con_nulos = ['Rating', 'Type', 'Content Rating', 'Current Ver', 'Android Ver']\n","df = df.dropna(subset=columnas_con_nulos)"],"metadata":{"id":"xQbiAB_kBpLp","executionInfo":{"status":"ok","timestamp":1722285028786,"user_tz":240,"elapsed":56,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":594,"outputs":[]},{"cell_type":"code","source":["# Quedan 9360 valores.\n","df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y-3-ffjHByYK","executionInfo":{"status":"ok","timestamp":1722285028786,"user_tz":240,"elapsed":55,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"bb08f158-7e07-4792-f5d4-321856976dc9"},"execution_count":595,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 9360 entries, 0 to 10840\n","Data columns (total 13 columns):\n"," #   Column          Non-Null Count  Dtype  \n","---  ------          --------------  -----  \n"," 0   App             9360 non-null   object \n"," 1   Category        9360 non-null   object \n"," 2   Rating          9360 non-null   float64\n"," 3   Reviews         9360 non-null   object \n"," 4   Size            9360 non-null   object \n"," 5   Installs        9360 non-null   object \n"," 6   Type            9360 non-null   object \n"," 7   Price           9360 non-null   object \n"," 8   Content Rating  9360 non-null   object \n"," 9   Genres          9360 non-null   object \n"," 10  Last Updated    9360 non-null   object \n"," 11  Current Ver     9360 non-null   object \n"," 12  Android Ver     9360 non-null   object \n","dtypes: float64(1), object(12)\n","memory usage: 1023.8+ KB\n"]}]},{"cell_type":"code","source":["df['Category'].unique()"],"metadata":{"id":"VRxzZSlekUqB","executionInfo":{"status":"ok","timestamp":1722285028786,"user_tz":240,"elapsed":53,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"6ded275e-4736-42d5-b534-c69004d4b96e","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":596,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['ART_AND_DESIGN', 'AUTO_AND_VEHICLES', 'BEAUTY',\n","       'BOOKS_AND_REFERENCE', 'BUSINESS', 'COMICS', 'COMMUNICATION',\n","       'DATING', 'EDUCATION', 'ENTERTAINMENT', 'EVENTS', 'FINANCE',\n","       'FOOD_AND_DRINK', 'HEALTH_AND_FITNESS', 'HOUSE_AND_HOME',\n","       'LIBRARIES_AND_DEMO', 'LIFESTYLE', 'GAME', 'FAMILY', 'MEDICAL',\n","       'SOCIAL', 'SHOPPING', 'PHOTOGRAPHY', 'SPORTS', 'TRAVEL_AND_LOCAL',\n","       'TOOLS', 'PERSONALIZATION', 'PRODUCTIVITY', 'PARENTING', 'WEATHER',\n","       'VIDEO_PLAYERS', 'NEWS_AND_MAGAZINES', 'MAPS_AND_NAVIGATION'],\n","      dtype=object)"]},"metadata":{},"execution_count":596}]},{"cell_type":"code","source":["df['Category'].value_counts().reset_index()"],"metadata":{"id":"bjh8qNivl3WR","executionInfo":{"status":"ok","timestamp":1722285028787,"user_tz":240,"elapsed":50,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"302e2d4d-d23a-4eba-8eae-7e3bc337a296","colab":{"base_uri":"https://localhost:8080/","height":1000}},"execution_count":597,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Category  count\n","0                FAMILY   1746\n","1                  GAME   1097\n","2                 TOOLS    733\n","3          PRODUCTIVITY    351\n","4               MEDICAL    350\n","5         COMMUNICATION    328\n","6               FINANCE    323\n","7                SPORTS    319\n","8           PHOTOGRAPHY    317\n","9             LIFESTYLE    314\n","10      PERSONALIZATION    312\n","11             BUSINESS    303\n","12   HEALTH_AND_FITNESS    297\n","13               SOCIAL    259\n","14             SHOPPING    238\n","15   NEWS_AND_MAGAZINES    233\n","16     TRAVEL_AND_LOCAL    226\n","17               DATING    195\n","18  BOOKS_AND_REFERENCE    178\n","19        VIDEO_PLAYERS    160\n","20            EDUCATION    155\n","21        ENTERTAINMENT    149\n","22  MAPS_AND_NAVIGATION    124\n","23       FOOD_AND_DRINK    109\n","24       HOUSE_AND_HOME     76\n","25              WEATHER     75\n","26    AUTO_AND_VEHICLES     73\n","27   LIBRARIES_AND_DEMO     64\n","28       ART_AND_DESIGN     61\n","29               COMICS     58\n","30            PARENTING     50\n","31               EVENTS     45\n","32               BEAUTY     42"],"text/html":["\n","  <div id=\"df-438c7f61-0700-4bc4-8ed5-875c1da184cb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>FAMILY</td>\n","      <td>1746</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>GAME</td>\n","      <td>1097</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>TOOLS</td>\n","      <td>733</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>PRODUCTIVITY</td>\n","      <td>351</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>MEDICAL</td>\n","      <td>350</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>COMMUNICATION</td>\n","      <td>328</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>FINANCE</td>\n","      <td>323</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>SPORTS</td>\n","      <td>319</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>PHOTOGRAPHY</td>\n","      <td>317</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>LIFESTYLE</td>\n","      <td>314</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>PERSONALIZATION</td>\n","      <td>312</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>BUSINESS</td>\n","      <td>303</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>HEALTH_AND_FITNESS</td>\n","      <td>297</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>SOCIAL</td>\n","      <td>259</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>SHOPPING</td>\n","      <td>238</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>NEWS_AND_MAGAZINES</td>\n","      <td>233</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>TRAVEL_AND_LOCAL</td>\n","      <td>226</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>DATING</td>\n","      <td>195</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>BOOKS_AND_REFERENCE</td>\n","      <td>178</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>VIDEO_PLAYERS</td>\n","      <td>160</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>EDUCATION</td>\n","      <td>155</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>ENTERTAINMENT</td>\n","      <td>149</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>MAPS_AND_NAVIGATION</td>\n","      <td>124</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>FOOD_AND_DRINK</td>\n","      <td>109</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>HOUSE_AND_HOME</td>\n","      <td>76</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>WEATHER</td>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>AUTO_AND_VEHICLES</td>\n","      <td>73</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>LIBRARIES_AND_DEMO</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>ART_AND_DESIGN</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>COMICS</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>PARENTING</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>EVENTS</td>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>BEAUTY</td>\n","      <td>42</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-438c7f61-0700-4bc4-8ed5-875c1da184cb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-438c7f61-0700-4bc4-8ed5-875c1da184cb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-438c7f61-0700-4bc4-8ed5-875c1da184cb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c0f3ffe6-657b-44a9-aa61-156ad5c844b7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c0f3ffe6-657b-44a9-aa61-156ad5c844b7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c0f3ffe6-657b-44a9-aa61-156ad5c844b7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df['Category']\",\n  \"rows\": 33,\n  \"fields\": [\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 33,\n        \"samples\": [\n          \"EVENTS\",\n          \"NEWS_AND_MAGAZINES\",\n          \"AUTO_AND_VEHICLES\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 335,\n        \"min\": 42,\n        \"max\": 1746,\n        \"num_unique_values\": 33,\n        \"samples\": [\n          45,\n          233,\n          73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":597}]},{"cell_type":"code","source":["df['Installs'].value_counts().reset_index()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":645},"id":"c3ywZJ0d74Tq","executionInfo":{"status":"ok","timestamp":1722285028787,"user_tz":240,"elapsed":48,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"c1aeaed6-85ec-48c9-cc22-e97572672019"},"execution_count":598,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          Installs  count\n","0       1,000,000+   1576\n","1      10,000,000+   1252\n","2         100,000+   1150\n","3          10,000+   1009\n","4       5,000,000+    752\n","5           1,000+    712\n","6         500,000+    537\n","7          50,000+    466\n","8           5,000+    431\n","9     100,000,000+    409\n","10            100+    309\n","11     50,000,000+    289\n","12            500+    201\n","13    500,000,000+     72\n","14             10+     69\n","15  1,000,000,000+     58\n","16             50+     56\n","17              5+      9\n","18              1+      3"],"text/html":["\n","  <div id=\"df-925d054a-3e72-4f81-8e0e-bd80444d4a25\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Installs</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1,000,000+</td>\n","      <td>1576</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>10,000,000+</td>\n","      <td>1252</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>100,000+</td>\n","      <td>1150</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10,000+</td>\n","      <td>1009</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5,000,000+</td>\n","      <td>752</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1,000+</td>\n","      <td>712</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>500,000+</td>\n","      <td>537</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>50,000+</td>\n","      <td>466</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>5,000+</td>\n","      <td>431</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>100,000,000+</td>\n","      <td>409</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>100+</td>\n","      <td>309</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>50,000,000+</td>\n","      <td>289</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>500+</td>\n","      <td>201</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>500,000,000+</td>\n","      <td>72</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>10+</td>\n","      <td>69</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>1,000,000,000+</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>50+</td>\n","      <td>56</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>5+</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1+</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-925d054a-3e72-4f81-8e0e-bd80444d4a25')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-925d054a-3e72-4f81-8e0e-bd80444d4a25 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-925d054a-3e72-4f81-8e0e-bd80444d4a25');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4ab8d1c6-30d7-4cf7-be09-a602095f2d29\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4ab8d1c6-30d7-4cf7-be09-a602095f2d29')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4ab8d1c6-30d7-4cf7-be09-a602095f2d29 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df['Installs']\",\n  \"rows\": 19,\n  \"fields\": [\n    {\n      \"column\": \"Installs\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"1,000,000+\",\n          \"1,000+\",\n          \"50,000,000+\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 468,\n        \"min\": 3,\n        \"max\": 1576,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          1576,\n          712,\n          289\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":598}]},{"cell_type":"code","source":["df['Type'].value_counts().reset_index()\n"],"metadata":{"id":"WSfJAqKmk5ka","executionInfo":{"status":"ok","timestamp":1722285028787,"user_tz":240,"elapsed":47,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"e0d27188-2a7c-4ee0-83e4-964390ab3506","colab":{"base_uri":"https://localhost:8080/","height":112}},"execution_count":599,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Type  count\n","0  Free   8715\n","1  Paid    645"],"text/html":["\n","  <div id=\"df-c382e963-12e9-4cb9-832f-12e351bf6a34\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Type</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Free</td>\n","      <td>8715</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Paid</td>\n","      <td>645</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c382e963-12e9-4cb9-832f-12e351bf6a34')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c382e963-12e9-4cb9-832f-12e351bf6a34 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c382e963-12e9-4cb9-832f-12e351bf6a34');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-89bb883a-a29f-4e63-9003-e26cfab5a805\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-89bb883a-a29f-4e63-9003-e26cfab5a805')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-89bb883a-a29f-4e63-9003-e26cfab5a805 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df['Type']\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Paid\",\n          \"Free\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5706,\n        \"min\": 645,\n        \"max\": 8715,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          645,\n          8715\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":599}]},{"cell_type":"code","source":["df['Price'].value_counts().reset_index()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"pqBlLJZEJqND","executionInfo":{"status":"ok","timestamp":1722285028788,"user_tz":240,"elapsed":46,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"c104bbf0-3286-42aa-c700-147ee3787995"},"execution_count":600,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Price  count\n","0         0   8715\n","1     $2.99    114\n","2     $0.99    106\n","3     $4.99     70\n","4     $1.99     59\n","..      ...    ...\n","68    $1.29      1\n","69  $299.99      1\n","70  $379.99      1\n","71   $37.99      1\n","72    $1.20      1\n","\n","[73 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-cdb1aa39-b91e-428e-ab70-1432a86c7465\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Price</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>8715</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>$2.99</td>\n","      <td>114</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>$0.99</td>\n","      <td>106</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>$4.99</td>\n","      <td>70</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>$1.99</td>\n","      <td>59</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>$1.29</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>69</th>\n","      <td>$299.99</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>70</th>\n","      <td>$379.99</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>71</th>\n","      <td>$37.99</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>72</th>\n","      <td>$1.20</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>73 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cdb1aa39-b91e-428e-ab70-1432a86c7465')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cdb1aa39-b91e-428e-ab70-1432a86c7465 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cdb1aa39-b91e-428e-ab70-1432a86c7465');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0a518cca-d32d-42d9-9900-087dcc79d9c6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0a518cca-d32d-42d9-9900-087dcc79d9c6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0a518cca-d32d-42d9-9900-087dcc79d9c6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df['Price']\",\n  \"rows\": 73,\n  \"fields\": [\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 73,\n        \"samples\": [\n          \"$1.99\",\n          \"$1.61\",\n          \"$11.99\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1019,\n        \"min\": 1,\n        \"max\": 8715,\n        \"num_unique_values\": 21,\n        \"samples\": [\n          8715,\n          4,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":600}]},{"cell_type":"code","source":["df['Content Rating'].value_counts().reset_index()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"I0wW09ki-Jda","executionInfo":{"status":"ok","timestamp":1722285028788,"user_tz":240,"elapsed":45,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"801e2bc4-e506-4a4b-b428-33c969b8af8d"},"execution_count":601,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Content Rating  count\n","0         Everyone   7414\n","1             Teen   1084\n","2       Mature 17+    461\n","3     Everyone 10+    397\n","4  Adults only 18+      3\n","5          Unrated      1"],"text/html":["\n","  <div id=\"df-a7b8826b-008b-4cfc-8e15-177030bea5fb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Content Rating</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Everyone</td>\n","      <td>7414</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Teen</td>\n","      <td>1084</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Mature 17+</td>\n","      <td>461</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Everyone 10+</td>\n","      <td>397</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Adults only 18+</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Unrated</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a7b8826b-008b-4cfc-8e15-177030bea5fb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a7b8826b-008b-4cfc-8e15-177030bea5fb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a7b8826b-008b-4cfc-8e15-177030bea5fb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-82d08ef2-1d2e-4d34-83c9-5025af6c4a27\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-82d08ef2-1d2e-4d34-83c9-5025af6c4a27')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-82d08ef2-1d2e-4d34-83c9-5025af6c4a27 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df['Content Rating']\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"Content Rating\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Everyone\",\n          \"Teen\",\n          \"Unrated\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2895,\n        \"min\": 1,\n        \"max\": 7414,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          7414,\n          1084,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":601}]},{"cell_type":"code","source":["df['Genres'].unique()\n"],"metadata":{"id":"v116oDTVj4mp","executionInfo":{"status":"ok","timestamp":1722285028788,"user_tz":240,"elapsed":43,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"23c2330a-6ac9-495a-d659-d4d0b032066a","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":602,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Art & Design', 'Art & Design;Pretend Play',\n","       'Art & Design;Creativity', 'Auto & Vehicles', 'Beauty',\n","       'Books & Reference', 'Business', 'Comics', 'Comics;Creativity',\n","       'Communication', 'Dating', 'Education;Education', 'Education',\n","       'Education;Creativity', 'Education;Music & Video',\n","       'Education;Action & Adventure', 'Education;Pretend Play',\n","       'Education;Brain Games', 'Entertainment',\n","       'Entertainment;Music & Video', 'Entertainment;Brain Games',\n","       'Entertainment;Creativity', 'Events', 'Finance', 'Food & Drink',\n","       'Health & Fitness', 'House & Home', 'Libraries & Demo',\n","       'Lifestyle', 'Lifestyle;Pretend Play',\n","       'Adventure;Action & Adventure', 'Arcade', 'Casual', 'Card',\n","       'Casual;Pretend Play', 'Action', 'Strategy', 'Puzzle', 'Sports',\n","       'Music', 'Word', 'Racing', 'Casual;Creativity',\n","       'Casual;Action & Adventure', 'Simulation', 'Adventure', 'Board',\n","       'Trivia', 'Role Playing', 'Simulation;Education',\n","       'Action;Action & Adventure', 'Casual;Brain Games',\n","       'Simulation;Action & Adventure', 'Educational;Creativity',\n","       'Puzzle;Brain Games', 'Educational;Education', 'Card;Brain Games',\n","       'Educational;Brain Games', 'Educational;Pretend Play',\n","       'Entertainment;Education', 'Casual;Education',\n","       'Music;Music & Video', 'Racing;Action & Adventure',\n","       'Arcade;Pretend Play', 'Role Playing;Action & Adventure',\n","       'Simulation;Pretend Play', 'Puzzle;Creativity',\n","       'Sports;Action & Adventure', 'Educational;Action & Adventure',\n","       'Arcade;Action & Adventure', 'Entertainment;Action & Adventure',\n","       'Puzzle;Action & Adventure', 'Strategy;Action & Adventure',\n","       'Music & Audio;Music & Video', 'Health & Fitness;Education',\n","       'Adventure;Education', 'Board;Brain Games',\n","       'Board;Action & Adventure', 'Board;Pretend Play',\n","       'Casual;Music & Video', 'Role Playing;Pretend Play',\n","       'Entertainment;Pretend Play', 'Video Players & Editors;Creativity',\n","       'Card;Action & Adventure', 'Medical', 'Social', 'Shopping',\n","       'Photography', 'Travel & Local',\n","       'Travel & Local;Action & Adventure', 'Tools', 'Tools;Education',\n","       'Personalization', 'Productivity', 'Parenting',\n","       'Parenting;Music & Video', 'Parenting;Brain Games',\n","       'Parenting;Education', 'Weather', 'Video Players & Editors',\n","       'Video Players & Editors;Music & Video', 'News & Magazines',\n","       'Maps & Navigation', 'Health & Fitness;Action & Adventure',\n","       'Educational', 'Casino', 'Adventure;Brain Games',\n","       'Lifestyle;Education', 'Books & Reference;Education',\n","       'Puzzle;Education', 'Role Playing;Brain Games',\n","       'Strategy;Education', 'Racing;Pretend Play',\n","       'Communication;Creativity', 'Strategy;Creativity'], dtype=object)"]},"metadata":{},"execution_count":602}]},{"cell_type":"code","source":["df['Genres'].value_counts().reset_index()\n"],"metadata":{"id":"Cd2awT6Vi8zn","executionInfo":{"status":"ok","timestamp":1722285028788,"user_tz":240,"elapsed":39,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"a1522c0e-70e8-4219-b881-24ff130f23fe","colab":{"base_uri":"https://localhost:8080/","height":423}},"execution_count":603,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      Genres  count\n","0                      Tools    732\n","1              Entertainment    533\n","2                  Education    468\n","3                     Action    358\n","4               Productivity    351\n","..                       ...    ...\n","110    Parenting;Brain Games      1\n","111         Card;Brain Games      1\n","112          Tools;Education      1\n","113  Entertainment;Education      1\n","114      Strategy;Creativity      1\n","\n","[115 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-3dd23895-9a11-402b-ba68-203c87356071\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Genres</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Tools</td>\n","      <td>732</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Entertainment</td>\n","      <td>533</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Education</td>\n","      <td>468</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Action</td>\n","      <td>358</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Productivity</td>\n","      <td>351</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>110</th>\n","      <td>Parenting;Brain Games</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>111</th>\n","      <td>Card;Brain Games</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>112</th>\n","      <td>Tools;Education</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>113</th>\n","      <td>Entertainment;Education</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>114</th>\n","      <td>Strategy;Creativity</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>115 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3dd23895-9a11-402b-ba68-203c87356071')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3dd23895-9a11-402b-ba68-203c87356071 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3dd23895-9a11-402b-ba68-203c87356071');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-33f9309b-e974-4312-ae4a-a52de9513e32\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-33f9309b-e974-4312-ae4a-a52de9513e32')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-33f9309b-e974-4312-ae4a-a52de9513e32 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df['Genres']\",\n  \"rows\": 115,\n  \"fields\": [\n    {\n      \"column\": \"Genres\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 115,\n        \"samples\": [\n          \"Video Players & Editors;Music & Video\",\n          \"Productivity\",\n          \"Beauty\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 132,\n        \"min\": 1,\n        \"max\": 732,\n        \"num_unique_values\": 64,\n        \"samples\": [\n          17,\n          6,\n          732\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":603}]},{"cell_type":"markdown","source":["## Limpieza de columnas y encoder correspondientes."],"metadata":{"id":"kMIak9IYhqX1"}},{"cell_type":"code","source":["# Convertir 'Installs' a numérico\n","df['Installs'] = df['Installs'].replace('[\\+,]', '', regex=True).astype(int)\n","\n","\n","df['Size'] = df['Size'].replace('Varies with device', np.nan)\n","df['Size'] = df['Size'].replace('[Mk]', '', regex=True).astype(float)\n","\n","\n","# Convertir 'Price' a numérico (en USD)\n","df['Price'] = df['Price'].replace('[\\$,]', '', regex=True).astype(float)\n","\n","# Convertir 'Type' a binario\n","df['Type'] = df['Type'].map({'Free': 0, 'Paid': 1})"],"metadata":{"id":"L9MSluUfhxtc","executionInfo":{"status":"ok","timestamp":1722285028788,"user_tz":240,"elapsed":37,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":604,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ruSSH_Mc7SDd","executionInfo":{"status":"ok","timestamp":1722285028788,"user_tz":240,"elapsed":36,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"94540c1f-d4bb-4764-882c-21761bd19363"},"execution_count":605,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 9360 entries, 0 to 10840\n","Data columns (total 13 columns):\n"," #   Column          Non-Null Count  Dtype  \n","---  ------          --------------  -----  \n"," 0   App             9360 non-null   object \n"," 1   Category        9360 non-null   object \n"," 2   Rating          9360 non-null   float64\n"," 3   Reviews         9360 non-null   object \n"," 4   Size            7723 non-null   float64\n"," 5   Installs        9360 non-null   int64  \n"," 6   Type            9360 non-null   int64  \n"," 7   Price           9360 non-null   float64\n"," 8   Content Rating  9360 non-null   object \n"," 9   Genres          9360 non-null   object \n"," 10  Last Updated    9360 non-null   object \n"," 11  Current Ver     9360 non-null   object \n"," 12  Android Ver     9360 non-null   object \n","dtypes: float64(3), int64(2), object(8)\n","memory usage: 1023.8+ KB\n"]}]},{"cell_type":"code","source":["df['Size'].value_counts().reset_index()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"gMd1kc8Q-V61","executionInfo":{"status":"ok","timestamp":1722285028789,"user_tz":240,"elapsed":33,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"b7ebedde-d52c-42d7-8968-b8e82be55dbb"},"execution_count":606,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Size  count\n","0     14.0    166\n","1     12.0    161\n","2     15.0    159\n","3     11.0    159\n","4     13.0    157\n","..     ...    ...\n","371  383.0      1\n","372  454.0      1\n","373  812.0      1\n","374  842.0      1\n","375  619.0      1\n","\n","[376 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-652be6af-3af7-4a1f-bcda-745987f70562\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Size</th>\n","      <th>count</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>14.0</td>\n","      <td>166</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>12.0</td>\n","      <td>161</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>15.0</td>\n","      <td>159</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11.0</td>\n","      <td>159</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>13.0</td>\n","      <td>157</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>371</th>\n","      <td>383.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>372</th>\n","      <td>454.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>373</th>\n","      <td>812.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>374</th>\n","      <td>842.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>375</th>\n","      <td>619.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>376 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-652be6af-3af7-4a1f-bcda-745987f70562')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-652be6af-3af7-4a1f-bcda-745987f70562 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-652be6af-3af7-4a1f-bcda-745987f70562');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b43d38a4-552c-4398-81fa-c43cb1ce7d30\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b43d38a4-552c-4398-81fa-c43cb1ce7d30')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b43d38a4-552c-4398-81fa-c43cb1ce7d30 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df['Size']\",\n  \"rows\": 376,\n  \"fields\": [\n    {\n      \"column\": \"Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 313.21491203585947,\n        \"min\": 1.0,\n        \"max\": 994.0,\n        \"num_unique_values\": 376,\n        \"samples\": [\n          540.0,\n          872.0,\n          234.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30,\n        \"min\": 1,\n        \"max\": 166,\n        \"num_unique_values\": 79,\n        \"samples\": [\n          51,\n          166,\n          69\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":606}]},{"cell_type":"code","source":["# Eliminar filas con valores nulos en la columna 'Size'\n","df= df.dropna(subset=['Size'])"],"metadata":{"id":"VKCo7e2A6d_H","executionInfo":{"status":"ok","timestamp":1722285028789,"user_tz":240,"elapsed":32,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":607,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WAWMiSae7q5g","executionInfo":{"status":"ok","timestamp":1722285029187,"user_tz":240,"elapsed":429,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"546dca06-3a42-4799-fe13-b6f577ab38ad"},"execution_count":608,"outputs":[{"output_type":"execute_result","data":{"text/plain":["App               0\n","Category          0\n","Rating            0\n","Reviews           0\n","Size              0\n","Installs          0\n","Type              0\n","Price             0\n","Content Rating    0\n","Genres            0\n","Last Updated      0\n","Current Ver       0\n","Android Ver       0\n","dtype: int64"]},"metadata":{},"execution_count":608}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ukUb4XiMBMdg","executionInfo":{"status":"ok","timestamp":1722285029188,"user_tz":240,"elapsed":427,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"f0c06f37-edc4-4509-9b2e-394760d86e5c"},"execution_count":609,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 7723 entries, 0 to 10840\n","Data columns (total 13 columns):\n"," #   Column          Non-Null Count  Dtype  \n","---  ------          --------------  -----  \n"," 0   App             7723 non-null   object \n"," 1   Category        7723 non-null   object \n"," 2   Rating          7723 non-null   float64\n"," 3   Reviews         7723 non-null   object \n"," 4   Size            7723 non-null   float64\n"," 5   Installs        7723 non-null   int64  \n"," 6   Type            7723 non-null   int64  \n"," 7   Price           7723 non-null   float64\n"," 8   Content Rating  7723 non-null   object \n"," 9   Genres          7723 non-null   object \n"," 10  Last Updated    7723 non-null   object \n"," 11  Current Ver     7723 non-null   object \n"," 12  Android Ver     7723 non-null   object \n","dtypes: float64(3), int64(2), object(8)\n","memory usage: 844.7+ KB\n"]}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":573},"id":"9dpZ3Xrc5jrg","executionInfo":{"status":"ok","timestamp":1722285029188,"user_tz":240,"elapsed":24,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"c6625156-ec8d-4a26-c436-234f7d54956f"},"execution_count":610,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                 App        Category  Rating  \\\n","0     Photo Editor & Candy Camera & Grid & ScrapBook  ART_AND_DESIGN     4.1   \n","1                                Coloring book moana  ART_AND_DESIGN     3.9   \n","2  U Launcher Lite – FREE Live Cool Themes, Hide ...  ART_AND_DESIGN     4.7   \n","3                              Sketch - Draw & Paint  ART_AND_DESIGN     4.5   \n","4              Pixel Draw - Number Art Coloring Book  ART_AND_DESIGN     4.3   \n","\n","  Reviews  Size  Installs  Type  Price Content Rating  \\\n","0     159  19.0     10000     0    0.0       Everyone   \n","1     967  14.0    500000     0    0.0       Everyone   \n","2   87510   8.7   5000000     0    0.0       Everyone   \n","3  215644  25.0  50000000     0    0.0           Teen   \n","4     967   2.8    100000     0    0.0       Everyone   \n","\n","                      Genres      Last Updated         Current Ver  \\\n","0               Art & Design   January 7, 2018               1.0.0   \n","1  Art & Design;Pretend Play  January 15, 2018               2.0.0   \n","2               Art & Design    August 1, 2018               1.2.4   \n","3               Art & Design      June 8, 2018  Varies with device   \n","4    Art & Design;Creativity     June 20, 2018                 1.1   \n","\n","    Android Ver  \n","0  4.0.3 and up  \n","1  4.0.3 and up  \n","2  4.0.3 and up  \n","3    4.2 and up  \n","4    4.4 and up  "],"text/html":["\n","  <div id=\"df-7ab4d509-7f99-46ed-964e-3257f259504e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>App</th>\n","      <th>Category</th>\n","      <th>Rating</th>\n","      <th>Reviews</th>\n","      <th>Size</th>\n","      <th>Installs</th>\n","      <th>Type</th>\n","      <th>Price</th>\n","      <th>Content Rating</th>\n","      <th>Genres</th>\n","      <th>Last Updated</th>\n","      <th>Current Ver</th>\n","      <th>Android Ver</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Photo Editor &amp; Candy Camera &amp; Grid &amp; ScrapBook</td>\n","      <td>ART_AND_DESIGN</td>\n","      <td>4.1</td>\n","      <td>159</td>\n","      <td>19.0</td>\n","      <td>10000</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>Everyone</td>\n","      <td>Art &amp; Design</td>\n","      <td>January 7, 2018</td>\n","      <td>1.0.0</td>\n","      <td>4.0.3 and up</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Coloring book moana</td>\n","      <td>ART_AND_DESIGN</td>\n","      <td>3.9</td>\n","      <td>967</td>\n","      <td>14.0</td>\n","      <td>500000</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>Everyone</td>\n","      <td>Art &amp; Design;Pretend Play</td>\n","      <td>January 15, 2018</td>\n","      <td>2.0.0</td>\n","      <td>4.0.3 and up</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>U Launcher Lite – FREE Live Cool Themes, Hide ...</td>\n","      <td>ART_AND_DESIGN</td>\n","      <td>4.7</td>\n","      <td>87510</td>\n","      <td>8.7</td>\n","      <td>5000000</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>Everyone</td>\n","      <td>Art &amp; Design</td>\n","      <td>August 1, 2018</td>\n","      <td>1.2.4</td>\n","      <td>4.0.3 and up</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sketch - Draw &amp; Paint</td>\n","      <td>ART_AND_DESIGN</td>\n","      <td>4.5</td>\n","      <td>215644</td>\n","      <td>25.0</td>\n","      <td>50000000</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>Teen</td>\n","      <td>Art &amp; Design</td>\n","      <td>June 8, 2018</td>\n","      <td>Varies with device</td>\n","      <td>4.2 and up</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Pixel Draw - Number Art Coloring Book</td>\n","      <td>ART_AND_DESIGN</td>\n","      <td>4.3</td>\n","      <td>967</td>\n","      <td>2.8</td>\n","      <td>100000</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>Everyone</td>\n","      <td>Art &amp; Design;Creativity</td>\n","      <td>June 20, 2018</td>\n","      <td>1.1</td>\n","      <td>4.4 and up</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ab4d509-7f99-46ed-964e-3257f259504e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7ab4d509-7f99-46ed-964e-3257f259504e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7ab4d509-7f99-46ed-964e-3257f259504e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-481497e3-75e9-4223-9c9b-863b85a4e79d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-481497e3-75e9-4223-9c9b-863b85a4e79d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-481497e3-75e9-4223-9c9b-863b85a4e79d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 7723,\n  \"fields\": [\n    {\n      \"column\": \"App\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7023,\n        \"samples\": [\n          \"Pool Billiards Classic - bi a\",\n          \"Math Games for Pre-K - Grade 4\",\n          \"Reload: The Z-Team\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 33,\n        \"samples\": [\n          \"NEWS_AND_MAGAZINES\",\n          \"LIBRARIES_AND_DEMO\",\n          \"PERSONALIZATION\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5446382377975154,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          2.4,\n          1.4,\n          4.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reviews\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4669,\n        \"samples\": [\n          \"1555\",\n          \"26252\",\n          \"165888\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 93.54222986956422,\n        \"min\": 1.0,\n        \"max\": 994.0,\n        \"num_unique_values\": 376,\n        \"samples\": [\n          963.0,\n          376.0,\n          721.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Installs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 50157415,\n        \"min\": 1,\n        \"max\": 1000000000,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          10000,\n          50000,\n          500000000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.408036412586156,\n        \"min\": 0.0,\n        \"max\": 400.0,\n        \"num_unique_values\": 68,\n        \"samples\": [\n          37.99,\n          16.99\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Content Rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Everyone\",\n          \"Teen\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genres\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 112,\n        \"samples\": [\n          \"Simulation\",\n          \"Entertainment;Action & Adventure\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last Updated\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1278,\n        \"samples\": [\n          \"February 22, 2018\",\n          \"August 9, 2017\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Current Ver\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2519,\n        \"samples\": [\n          \"47\",\n          \"10.78\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Android Ver\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 31,\n        \"samples\": [\n          \"2.0.1 and up\",\n          \"4.0.3 - 7.1.1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":610}]},{"cell_type":"code","source":["# Reemplazar cualquier valor que no pueda ser convertido a número con NaN\n","df['Reviews'] = pd.to_numeric(df['Reviews'], errors='coerce')"],"metadata":{"id":"QGmLB7rzjkfY","executionInfo":{"status":"ok","timestamp":1722285029188,"user_tz":240,"elapsed":22,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":611,"outputs":[]},{"cell_type":"markdown","source":["## Analizamos la variable objetivo --> Categoria GAME"],"metadata":{"id":"7NKeJqXxCe8Y"}},{"cell_type":"code","source":["df.describe().T"],"metadata":{"id":"MqItrNsDjJPg","executionInfo":{"status":"ok","timestamp":1722285029189,"user_tz":240,"elapsed":22,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"ca5123da-ed39-4645-f2f2-72aa58677aa5","colab":{"base_uri":"https://localhost:8080/","height":257}},"execution_count":612,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           count          mean           std  min      25%       50%  \\\n","Rating    7723.0  4.173935e+00  5.446382e-01  1.0      4.0       4.3   \n","Reviews   7723.0  2.948983e+05  1.863933e+06  1.0    107.5    2332.0   \n","Size      7723.0  3.730707e+01  9.354223e+01  1.0      6.1      16.0   \n","Installs  7723.0  8.424070e+06  5.015742e+07  1.0  10000.0  100000.0   \n","Type      7723.0  7.471190e-02  2.629429e-01  0.0      0.0       0.0   \n","Price     7723.0  1.128169e+00  1.740804e+01  0.0      0.0       0.0   \n","\n","                75%           max  \n","Rating          4.5  5.000000e+00  \n","Reviews     39053.0  4.489389e+07  \n","Size           37.0  9.940000e+02  \n","Installs  1000000.0  1.000000e+09  \n","Type            0.0  1.000000e+00  \n","Price           0.0  4.000000e+02  "],"text/html":["\n","  <div id=\"df-ba3614fb-8146-4324-bc2d-59801a7a9aaf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Rating</th>\n","      <td>7723.0</td>\n","      <td>4.173935e+00</td>\n","      <td>5.446382e-01</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>4.3</td>\n","      <td>4.5</td>\n","      <td>5.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Reviews</th>\n","      <td>7723.0</td>\n","      <td>2.948983e+05</td>\n","      <td>1.863933e+06</td>\n","      <td>1.0</td>\n","      <td>107.5</td>\n","      <td>2332.0</td>\n","      <td>39053.0</td>\n","      <td>4.489389e+07</td>\n","    </tr>\n","    <tr>\n","      <th>Size</th>\n","      <td>7723.0</td>\n","      <td>3.730707e+01</td>\n","      <td>9.354223e+01</td>\n","      <td>1.0</td>\n","      <td>6.1</td>\n","      <td>16.0</td>\n","      <td>37.0</td>\n","      <td>9.940000e+02</td>\n","    </tr>\n","    <tr>\n","      <th>Installs</th>\n","      <td>7723.0</td>\n","      <td>8.424070e+06</td>\n","      <td>5.015742e+07</td>\n","      <td>1.0</td>\n","      <td>10000.0</td>\n","      <td>100000.0</td>\n","      <td>1000000.0</td>\n","      <td>1.000000e+09</td>\n","    </tr>\n","    <tr>\n","      <th>Type</th>\n","      <td>7723.0</td>\n","      <td>7.471190e-02</td>\n","      <td>2.629429e-01</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Price</th>\n","      <td>7723.0</td>\n","      <td>1.128169e+00</td>\n","      <td>1.740804e+01</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.000000e+02</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ba3614fb-8146-4324-bc2d-59801a7a9aaf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ba3614fb-8146-4324-bc2d-59801a7a9aaf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ba3614fb-8146-4324-bc2d-59801a7a9aaf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2de12394-06f7-4153-9258-8ef05d4e7d24\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2de12394-06f7-4153-9258-8ef05d4e7d24')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2de12394-06f7-4153-9258-8ef05d4e7d24 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 7723.0,\n        \"max\": 7723.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          7723.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3417067.018610871,\n        \"min\": 0.07471189952091156,\n        \"max\": 8424070.480124304,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          4.173934999352584\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20338150.64447816,\n        \"min\": 0.26294292905292616,\n        \"max\": 50157415.574594334,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.5446382377975154\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5163977794943223,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"25%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4073.0980305741073,\n        \"min\": 0.0,\n        \"max\": 10000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          107.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40643.42409937512,\n        \"min\": 0.0,\n        \"max\": 100000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2332.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"75%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 405357.18608240027,\n        \"min\": 0.0,\n        \"max\": 1000000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          39053.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 404980929.76504564,\n        \"min\": 1.0,\n        \"max\": 1000000000.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":612}]},{"cell_type":"code","source":["# El enfoque de nuestro estudio se centra en las aplicaciones de categoria Game, vamos a crear un df solo con categoria Game\n","df_game = df[df['Category'] == 'GAME']\n","df_game.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":348},"id":"Y589MuR8E2_V","executionInfo":{"status":"ok","timestamp":1722285029189,"user_tz":240,"elapsed":21,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"0c9d4ee6-2fae-4f2b-e014-0f9d1fd4a9b2"},"execution_count":613,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   App Category  Rating   Reviews  Size    Installs  Type  \\\n","1653            ROBLOX     GAME     4.5   4447388  67.0   100000000     0   \n","1654    Subway Surfers     GAME     4.5  27722264  76.0  1000000000     0   \n","1655  Candy Crush Saga     GAME     4.4  22426677  74.0   500000000     0   \n","1656         Solitaire     GAME     4.7    254258  23.0    10000000     0   \n","1657    Bubble Shooter     GAME     4.5    148897  46.0    10000000     0   \n","\n","      Price Content Rating                        Genres    Last Updated  \\\n","1653    0.0   Everyone 10+  Adventure;Action & Adventure   July 31, 2018   \n","1654    0.0   Everyone 10+                        Arcade   July 12, 2018   \n","1655    0.0       Everyone                        Casual    July 5, 2018   \n","1656    0.0       Everyone                          Card  August 1, 2018   \n","1657    0.0       Everyone                        Casual   July 17, 2018   \n","\n","       Current Ver   Android Ver  \n","1653  2.347.225742    4.1 and up  \n","1654        1.90.0    4.1 and up  \n","1655     1.129.0.2    4.1 and up  \n","1656       2.137.0    4.1 and up  \n","1657        1.20.1  4.0.3 and up  "],"text/html":["\n","  <div id=\"df-a19f77e0-2cb4-42da-9026-1757b89964fc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>App</th>\n","      <th>Category</th>\n","      <th>Rating</th>\n","      <th>Reviews</th>\n","      <th>Size</th>\n","      <th>Installs</th>\n","      <th>Type</th>\n","      <th>Price</th>\n","      <th>Content Rating</th>\n","      <th>Genres</th>\n","      <th>Last Updated</th>\n","      <th>Current Ver</th>\n","      <th>Android Ver</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1653</th>\n","      <td>ROBLOX</td>\n","      <td>GAME</td>\n","      <td>4.5</td>\n","      <td>4447388</td>\n","      <td>67.0</td>\n","      <td>100000000</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>Everyone 10+</td>\n","      <td>Adventure;Action &amp; Adventure</td>\n","      <td>July 31, 2018</td>\n","      <td>2.347.225742</td>\n","      <td>4.1 and up</td>\n","    </tr>\n","    <tr>\n","      <th>1654</th>\n","      <td>Subway Surfers</td>\n","      <td>GAME</td>\n","      <td>4.5</td>\n","      <td>27722264</td>\n","      <td>76.0</td>\n","      <td>1000000000</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>Everyone 10+</td>\n","      <td>Arcade</td>\n","      <td>July 12, 2018</td>\n","      <td>1.90.0</td>\n","      <td>4.1 and up</td>\n","    </tr>\n","    <tr>\n","      <th>1655</th>\n","      <td>Candy Crush Saga</td>\n","      <td>GAME</td>\n","      <td>4.4</td>\n","      <td>22426677</td>\n","      <td>74.0</td>\n","      <td>500000000</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>Everyone</td>\n","      <td>Casual</td>\n","      <td>July 5, 2018</td>\n","      <td>1.129.0.2</td>\n","      <td>4.1 and up</td>\n","    </tr>\n","    <tr>\n","      <th>1656</th>\n","      <td>Solitaire</td>\n","      <td>GAME</td>\n","      <td>4.7</td>\n","      <td>254258</td>\n","      <td>23.0</td>\n","      <td>10000000</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>Everyone</td>\n","      <td>Card</td>\n","      <td>August 1, 2018</td>\n","      <td>2.137.0</td>\n","      <td>4.1 and up</td>\n","    </tr>\n","    <tr>\n","      <th>1657</th>\n","      <td>Bubble Shooter</td>\n","      <td>GAME</td>\n","      <td>4.5</td>\n","      <td>148897</td>\n","      <td>46.0</td>\n","      <td>10000000</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>Everyone</td>\n","      <td>Casual</td>\n","      <td>July 17, 2018</td>\n","      <td>1.20.1</td>\n","      <td>4.0.3 and up</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a19f77e0-2cb4-42da-9026-1757b89964fc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a19f77e0-2cb4-42da-9026-1757b89964fc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a19f77e0-2cb4-42da-9026-1757b89964fc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c52b0633-1993-499e-99bd-2e854432af97\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c52b0633-1993-499e-99bd-2e854432af97')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c52b0633-1993-499e-99bd-2e854432af97 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_game","repr_error":"0"}},"metadata":{},"execution_count":613}]},{"cell_type":"code","source":["# Filtro 2, df con todas las categorias excepto Game\n","df_others = df[df['Category'] != 'GAME']\n","df_others.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":573},"id":"vU5vz9ttEnvp","executionInfo":{"status":"ok","timestamp":1722285029189,"user_tz":240,"elapsed":19,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"b9cf37ad-557a-48d0-f260-2ce5fb939745"},"execution_count":614,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                 App        Category  Rating  \\\n","0     Photo Editor & Candy Camera & Grid & ScrapBook  ART_AND_DESIGN     4.1   \n","1                                Coloring book moana  ART_AND_DESIGN     3.9   \n","2  U Launcher Lite – FREE Live Cool Themes, Hide ...  ART_AND_DESIGN     4.7   \n","3                              Sketch - Draw & Paint  ART_AND_DESIGN     4.5   \n","4              Pixel Draw - Number Art Coloring Book  ART_AND_DESIGN     4.3   \n","\n","   Reviews  Size  Installs  Type  Price Content Rating  \\\n","0      159  19.0     10000     0    0.0       Everyone   \n","1      967  14.0    500000     0    0.0       Everyone   \n","2    87510   8.7   5000000     0    0.0       Everyone   \n","3   215644  25.0  50000000     0    0.0           Teen   \n","4      967   2.8    100000     0    0.0       Everyone   \n","\n","                      Genres      Last Updated         Current Ver  \\\n","0               Art & Design   January 7, 2018               1.0.0   \n","1  Art & Design;Pretend Play  January 15, 2018               2.0.0   \n","2               Art & Design    August 1, 2018               1.2.4   \n","3               Art & Design      June 8, 2018  Varies with device   \n","4    Art & Design;Creativity     June 20, 2018                 1.1   \n","\n","    Android Ver  \n","0  4.0.3 and up  \n","1  4.0.3 and up  \n","2  4.0.3 and up  \n","3    4.2 and up  \n","4    4.4 and up  "],"text/html":["\n","  <div id=\"df-cbb2e3b4-d2f2-4136-917e-c808a2b7648c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>App</th>\n","      <th>Category</th>\n","      <th>Rating</th>\n","      <th>Reviews</th>\n","      <th>Size</th>\n","      <th>Installs</th>\n","      <th>Type</th>\n","      <th>Price</th>\n","      <th>Content Rating</th>\n","      <th>Genres</th>\n","      <th>Last Updated</th>\n","      <th>Current Ver</th>\n","      <th>Android Ver</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Photo Editor &amp; Candy Camera &amp; Grid &amp; ScrapBook</td>\n","      <td>ART_AND_DESIGN</td>\n","      <td>4.1</td>\n","      <td>159</td>\n","      <td>19.0</td>\n","      <td>10000</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>Everyone</td>\n","      <td>Art &amp; Design</td>\n","      <td>January 7, 2018</td>\n","      <td>1.0.0</td>\n","      <td>4.0.3 and up</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Coloring book moana</td>\n","      <td>ART_AND_DESIGN</td>\n","      <td>3.9</td>\n","      <td>967</td>\n","      <td>14.0</td>\n","      <td>500000</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>Everyone</td>\n","      <td>Art &amp; Design;Pretend Play</td>\n","      <td>January 15, 2018</td>\n","      <td>2.0.0</td>\n","      <td>4.0.3 and up</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>U Launcher Lite – FREE Live Cool Themes, Hide ...</td>\n","      <td>ART_AND_DESIGN</td>\n","      <td>4.7</td>\n","      <td>87510</td>\n","      <td>8.7</td>\n","      <td>5000000</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>Everyone</td>\n","      <td>Art &amp; Design</td>\n","      <td>August 1, 2018</td>\n","      <td>1.2.4</td>\n","      <td>4.0.3 and up</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Sketch - Draw &amp; Paint</td>\n","      <td>ART_AND_DESIGN</td>\n","      <td>4.5</td>\n","      <td>215644</td>\n","      <td>25.0</td>\n","      <td>50000000</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>Teen</td>\n","      <td>Art &amp; Design</td>\n","      <td>June 8, 2018</td>\n","      <td>Varies with device</td>\n","      <td>4.2 and up</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Pixel Draw - Number Art Coloring Book</td>\n","      <td>ART_AND_DESIGN</td>\n","      <td>4.3</td>\n","      <td>967</td>\n","      <td>2.8</td>\n","      <td>100000</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>Everyone</td>\n","      <td>Art &amp; Design;Creativity</td>\n","      <td>June 20, 2018</td>\n","      <td>1.1</td>\n","      <td>4.4 and up</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cbb2e3b4-d2f2-4136-917e-c808a2b7648c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cbb2e3b4-d2f2-4136-917e-c808a2b7648c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cbb2e3b4-d2f2-4136-917e-c808a2b7648c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1dd8b467-4905-4690-827d-38915e12e58a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1dd8b467-4905-4690-827d-38915e12e58a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1dd8b467-4905-4690-827d-38915e12e58a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_others","summary":"{\n  \"name\": \"df_others\",\n  \"rows\": 6749,\n  \"fields\": [\n    {\n      \"column\": \"App\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6221,\n        \"samples\": [\n          \"Koi Live Wallpaper\",\n          \"OLX Uganda Sell Buy Cellphones\",\n          \"NCAA Sports\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 32,\n        \"samples\": [\n          \"VIDEO_PLAYERS\",\n          \"LIBRARIES_AND_DEMO\",\n          \"TOOLS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5634067168118176,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          2.4,\n          1.4,\n          4.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1003529,\n        \"min\": 1,\n        \"max\": 44881447,\n        \"num_unique_values\": 3909,\n        \"samples\": [\n          1819,\n          285838,\n          51068\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 98.85651544224199,\n        \"min\": 1.0,\n        \"max\": 994.0,\n        \"num_unique_values\": 373,\n        \"samples\": [\n          485.0,\n          7.9,\n          17.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Installs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 36060370,\n        \"min\": 1,\n        \"max\": 1000000000,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          10000,\n          50000,\n          500000000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.61192234932514,\n        \"min\": 0.0,\n        \"max\": 400.0,\n        \"num_unique_values\": 66,\n        \"samples\": [\n          15.46,\n          2.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Content Rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Everyone\",\n          \"Teen\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genres\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 102,\n        \"samples\": [\n          \"Educational;Creativity\",\n          \"Social\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last Updated\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1214,\n        \"samples\": [\n          \"August 17, 2017\",\n          \"October 8, 2015\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Current Ver\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2336,\n        \"samples\": [\n          \"1.3_4\",\n          \"1.2.187-83\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Android Ver\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 31,\n        \"samples\": [\n          \"2.0.1 and up\",\n          \"4.0.3 - 7.1.1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":614}]},{"cell_type":"code","source":["# Comparamos rapidamente la mediana y la desviación en rating\n","df_game.describe().T\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":257},"id":"7-dA4WbtE_td","executionInfo":{"status":"ok","timestamp":1722285029189,"user_tz":240,"elapsed":17,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"ce246179-f113-4890-bfed-8ba173cc9784"},"execution_count":615,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          count          mean           std  min        25%        50%  \\\n","Rating    974.0  4.269507e+00  3.771538e-01  1.0       4.10        4.3   \n","Reviews   974.0  1.386276e+06  4.384507e+06  1.0    2704.25    47671.0   \n","Size      974.0  4.682782e+01  3.955096e+01  1.1      23.00       43.0   \n","Installs  974.0  3.067192e+07  1.018852e+08  1.0  100000.00  1000000.0   \n","Type      974.0  7.700205e-02  2.667317e-01  0.0       0.00        0.0   \n","Price     974.0  2.817043e-01  1.338176e+00  0.0       0.00        0.0   \n","\n","                 75%           max  \n","Rating           4.5  5.000000e+00  \n","Reviews     503444.5  4.489389e+07  \n","Size            66.0  6.910000e+02  \n","Installs  10000000.0  1.000000e+09  \n","Type             0.0  1.000000e+00  \n","Price            0.0  1.799000e+01  "],"text/html":["\n","  <div id=\"df-3abc8cda-4e0e-43b5-87d4-f0a3ec863f2b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Rating</th>\n","      <td>974.0</td>\n","      <td>4.269507e+00</td>\n","      <td>3.771538e-01</td>\n","      <td>1.0</td>\n","      <td>4.10</td>\n","      <td>4.3</td>\n","      <td>4.5</td>\n","      <td>5.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Reviews</th>\n","      <td>974.0</td>\n","      <td>1.386276e+06</td>\n","      <td>4.384507e+06</td>\n","      <td>1.0</td>\n","      <td>2704.25</td>\n","      <td>47671.0</td>\n","      <td>503444.5</td>\n","      <td>4.489389e+07</td>\n","    </tr>\n","    <tr>\n","      <th>Size</th>\n","      <td>974.0</td>\n","      <td>4.682782e+01</td>\n","      <td>3.955096e+01</td>\n","      <td>1.1</td>\n","      <td>23.00</td>\n","      <td>43.0</td>\n","      <td>66.0</td>\n","      <td>6.910000e+02</td>\n","    </tr>\n","    <tr>\n","      <th>Installs</th>\n","      <td>974.0</td>\n","      <td>3.067192e+07</td>\n","      <td>1.018852e+08</td>\n","      <td>1.0</td>\n","      <td>100000.00</td>\n","      <td>1000000.0</td>\n","      <td>10000000.0</td>\n","      <td>1.000000e+09</td>\n","    </tr>\n","    <tr>\n","      <th>Type</th>\n","      <td>974.0</td>\n","      <td>7.700205e-02</td>\n","      <td>2.667317e-01</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Price</th>\n","      <td>974.0</td>\n","      <td>2.817043e-01</td>\n","      <td>1.338176e+00</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.799000e+01</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3abc8cda-4e0e-43b5-87d4-f0a3ec863f2b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3abc8cda-4e0e-43b5-87d4-f0a3ec863f2b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3abc8cda-4e0e-43b5-87d4-f0a3ec863f2b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-722723b5-f5f1-46be-8ebe-5ab16e215140\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-722723b5-f5f1-46be-8ebe-5ab16e215140')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-722723b5-f5f1-46be-8ebe-5ab16e215140 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_game\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 974.0,\n        \"max\": 974.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          974.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12420950.353952296,\n        \"min\": 0.07700205338809035,\n        \"max\": 30671922.707392197,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          4.269507186858316\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41273725.02164926,\n        \"min\": 0.26673166687317557,\n        \"max\": 101885163.86463092,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.3771537854134406\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5307227776030219,\n        \"min\": 0.0,\n        \"max\": 1.1,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"25%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40616.15065070072,\n        \"min\": 0.0,\n        \"max\": 100000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2704.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 404801.2483715949,\n        \"min\": 0.0,\n        \"max\": 1000000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          47671.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"75%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4046384.8509441693,\n        \"min\": 0.0,\n        \"max\": 10000000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          503444.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 404980988.6782249,\n        \"min\": 1.0,\n        \"max\": 1000000000.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":615}]},{"cell_type":"code","source":["df_others.describe().T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":257},"id":"BMuboZ7OFNN1","executionInfo":{"status":"ok","timestamp":1722285029542,"user_tz":240,"elapsed":369,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"8989e12f-15cf-4503-dbae-5c579eb5efcf"},"execution_count":616,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           count          mean           std  min      25%       50%  \\\n","Rating    6749.0  4.160142e+00  5.634067e-01  1.0      4.0       4.3   \n","Reviews   6749.0  1.373932e+05  1.003529e+06  1.0     82.0    1511.0   \n","Size      6749.0  3.593306e+01  9.885652e+01  1.0      5.5      14.0   \n","Installs  6749.0  5.213312e+06  3.606037e+07  1.0  10000.0  100000.0   \n","Type      6749.0  7.438139e-02  2.624100e-01  0.0      0.0       0.0   \n","Price     6749.0  1.250329e+00  1.861192e+01  0.0      0.0       0.0   \n","\n","                75%           max  \n","Rating          4.5  5.000000e+00  \n","Reviews     26875.0  4.488145e+07  \n","Size           31.0  9.940000e+02  \n","Installs  1000000.0  1.000000e+09  \n","Type            0.0  1.000000e+00  \n","Price           0.0  4.000000e+02  "],"text/html":["\n","  <div id=\"df-1b1ece19-4511-4d5d-a5cf-85b7983c1f74\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Rating</th>\n","      <td>6749.0</td>\n","      <td>4.160142e+00</td>\n","      <td>5.634067e-01</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>4.3</td>\n","      <td>4.5</td>\n","      <td>5.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Reviews</th>\n","      <td>6749.0</td>\n","      <td>1.373932e+05</td>\n","      <td>1.003529e+06</td>\n","      <td>1.0</td>\n","      <td>82.0</td>\n","      <td>1511.0</td>\n","      <td>26875.0</td>\n","      <td>4.488145e+07</td>\n","    </tr>\n","    <tr>\n","      <th>Size</th>\n","      <td>6749.0</td>\n","      <td>3.593306e+01</td>\n","      <td>9.885652e+01</td>\n","      <td>1.0</td>\n","      <td>5.5</td>\n","      <td>14.0</td>\n","      <td>31.0</td>\n","      <td>9.940000e+02</td>\n","    </tr>\n","    <tr>\n","      <th>Installs</th>\n","      <td>6749.0</td>\n","      <td>5.213312e+06</td>\n","      <td>3.606037e+07</td>\n","      <td>1.0</td>\n","      <td>10000.0</td>\n","      <td>100000.0</td>\n","      <td>1000000.0</td>\n","      <td>1.000000e+09</td>\n","    </tr>\n","    <tr>\n","      <th>Type</th>\n","      <td>6749.0</td>\n","      <td>7.438139e-02</td>\n","      <td>2.624100e-01</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Price</th>\n","      <td>6749.0</td>\n","      <td>1.250329e+00</td>\n","      <td>1.861192e+01</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.000000e+02</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b1ece19-4511-4d5d-a5cf-85b7983c1f74')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1b1ece19-4511-4d5d-a5cf-85b7983c1f74 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1b1ece19-4511-4d5d-a5cf-85b7983c1f74');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b327652a-9d43-496f-b20f-9991a2444515\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b327652a-9d43-496f-b20f-9991a2444515')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b327652a-9d43-496f-b20f-9991a2444515 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_others\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 6749.0,\n        \"max\": 6749.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          6749.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2117817.35903801,\n        \"min\": 0.07438138983553119,\n        \"max\": 5213312.135279301,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          4.160142243295303\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14645138.94629917,\n        \"min\": 0.26240998747524463,\n        \"max\": 36060370.28097272,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.5634067168118176\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5163977794943223,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"25%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4075.137008944198,\n        \"min\": 0.0,\n        \"max\": 10000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          82.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40704.42287780285,\n        \"min\": 0.0,\n        \"max\": 100000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1511.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"75%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 406193.2390963382,\n        \"min\": 0.0,\n        \"max\": 1000000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          26875.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 404981723.9399389,\n        \"min\": 1.0,\n        \"max\": 1000000000.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":616}]},{"cell_type":"code","source":["# Efectivamente la categoria Game tiene levemente un promedio superior y menor desviación."],"metadata":{"id":"gcHHAKgbFQr2","executionInfo":{"status":"ok","timestamp":1722285029542,"user_tz":240,"elapsed":7,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":617,"outputs":[]},{"cell_type":"code","source":["# El enfoque de nuestro estudio se centra en las aplicaciones de categoria Game, vamos a ver como se comporta el rating en esta categoria.\n"],"metadata":{"id":"xf87LIfhE0V0","executionInfo":{"status":"ok","timestamp":1722285029542,"user_tz":240,"elapsed":6,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":618,"outputs":[]},{"cell_type":"code","source":["# Revisamos como se comporta con Game\n","plt.figure(figsize=(10, 6))\n","df_game['Rating'].value_counts().sort_index().plot(kind='bar', color='skyblue')\n","plt.title('Frecuencia de Ratings para la Categoría Game')\n","plt.xlabel('Rating')\n","plt.ylabel('Frecuencia')\n","plt.grid(True)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":437},"id":"rzsiOjrJD2Iv","executionInfo":{"status":"ok","timestamp":1722285029934,"user_tz":240,"elapsed":398,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"e9971d32-b974-4b15-98ff-247d9d8ff8f0"},"execution_count":619,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Como se comporta con el resto de las categorias.\n","\n","plt.figure(figsize=(10, 6))\n","df_others['Rating'].value_counts().sort_index().plot(kind='bar', color='skyblue')\n","plt.title('Frecuencia de Ratings para la Categoría Game')\n","plt.xlabel('Rating')\n","plt.ylabel('Frecuencia')\n","plt.grid(True)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":437},"id":"ZSma7AuvFfka","executionInfo":{"status":"ok","timestamp":1722285030344,"user_tz":240,"elapsed":416,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"64430792-13d9-4b19-d566-80c4e75077e0"},"execution_count":620,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df_game.describe().T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":257},"id":"Csc8D1mVj2HP","executionInfo":{"status":"ok","timestamp":1722285030346,"user_tz":240,"elapsed":48,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"1f81f157-a1a1-4bb6-e356-67d9aaed8c1c"},"execution_count":621,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          count          mean           std  min        25%        50%  \\\n","Rating    974.0  4.269507e+00  3.771538e-01  1.0       4.10        4.3   \n","Reviews   974.0  1.386276e+06  4.384507e+06  1.0    2704.25    47671.0   \n","Size      974.0  4.682782e+01  3.955096e+01  1.1      23.00       43.0   \n","Installs  974.0  3.067192e+07  1.018852e+08  1.0  100000.00  1000000.0   \n","Type      974.0  7.700205e-02  2.667317e-01  0.0       0.00        0.0   \n","Price     974.0  2.817043e-01  1.338176e+00  0.0       0.00        0.0   \n","\n","                 75%           max  \n","Rating           4.5  5.000000e+00  \n","Reviews     503444.5  4.489389e+07  \n","Size            66.0  6.910000e+02  \n","Installs  10000000.0  1.000000e+09  \n","Type             0.0  1.000000e+00  \n","Price            0.0  1.799000e+01  "],"text/html":["\n","  <div id=\"df-67a7882c-0f4c-4806-8e61-76e431a089a0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Rating</th>\n","      <td>974.0</td>\n","      <td>4.269507e+00</td>\n","      <td>3.771538e-01</td>\n","      <td>1.0</td>\n","      <td>4.10</td>\n","      <td>4.3</td>\n","      <td>4.5</td>\n","      <td>5.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Reviews</th>\n","      <td>974.0</td>\n","      <td>1.386276e+06</td>\n","      <td>4.384507e+06</td>\n","      <td>1.0</td>\n","      <td>2704.25</td>\n","      <td>47671.0</td>\n","      <td>503444.5</td>\n","      <td>4.489389e+07</td>\n","    </tr>\n","    <tr>\n","      <th>Size</th>\n","      <td>974.0</td>\n","      <td>4.682782e+01</td>\n","      <td>3.955096e+01</td>\n","      <td>1.1</td>\n","      <td>23.00</td>\n","      <td>43.0</td>\n","      <td>66.0</td>\n","      <td>6.910000e+02</td>\n","    </tr>\n","    <tr>\n","      <th>Installs</th>\n","      <td>974.0</td>\n","      <td>3.067192e+07</td>\n","      <td>1.018852e+08</td>\n","      <td>1.0</td>\n","      <td>100000.00</td>\n","      <td>1000000.0</td>\n","      <td>10000000.0</td>\n","      <td>1.000000e+09</td>\n","    </tr>\n","    <tr>\n","      <th>Type</th>\n","      <td>974.0</td>\n","      <td>7.700205e-02</td>\n","      <td>2.667317e-01</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Price</th>\n","      <td>974.0</td>\n","      <td>2.817043e-01</td>\n","      <td>1.338176e+00</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.799000e+01</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-67a7882c-0f4c-4806-8e61-76e431a089a0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-67a7882c-0f4c-4806-8e61-76e431a089a0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-67a7882c-0f4c-4806-8e61-76e431a089a0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-26f54d19-c091-4655-8abc-618e297d23f3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-26f54d19-c091-4655-8abc-618e297d23f3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-26f54d19-c091-4655-8abc-618e297d23f3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_game\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 974.0,\n        \"max\": 974.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          974.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12420950.353952296,\n        \"min\": 0.07700205338809035,\n        \"max\": 30671922.707392197,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          4.269507186858316\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41273725.02164926,\n        \"min\": 0.26673166687317557,\n        \"max\": 101885163.86463092,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.3771537854134406\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5307227776030219,\n        \"min\": 0.0,\n        \"max\": 1.1,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"25%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40616.15065070072,\n        \"min\": 0.0,\n        \"max\": 100000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2704.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 404801.2483715949,\n        \"min\": 0.0,\n        \"max\": 1000000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          47671.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"75%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4046384.8509441693,\n        \"min\": 0.0,\n        \"max\": 10000000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          503444.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 404980988.6782249,\n        \"min\": 1.0,\n        \"max\": 1000000000.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":621}]},{"cell_type":"code","source":["df_others.describe().T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":257},"id":"iVmkWR8rj8ny","executionInfo":{"status":"ok","timestamp":1722285030347,"user_tz":240,"elapsed":45,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"76adb406-194e-4e17-cb80-e9069801e719"},"execution_count":622,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           count          mean           std  min      25%       50%  \\\n","Rating    6749.0  4.160142e+00  5.634067e-01  1.0      4.0       4.3   \n","Reviews   6749.0  1.373932e+05  1.003529e+06  1.0     82.0    1511.0   \n","Size      6749.0  3.593306e+01  9.885652e+01  1.0      5.5      14.0   \n","Installs  6749.0  5.213312e+06  3.606037e+07  1.0  10000.0  100000.0   \n","Type      6749.0  7.438139e-02  2.624100e-01  0.0      0.0       0.0   \n","Price     6749.0  1.250329e+00  1.861192e+01  0.0      0.0       0.0   \n","\n","                75%           max  \n","Rating          4.5  5.000000e+00  \n","Reviews     26875.0  4.488145e+07  \n","Size           31.0  9.940000e+02  \n","Installs  1000000.0  1.000000e+09  \n","Type            0.0  1.000000e+00  \n","Price           0.0  4.000000e+02  "],"text/html":["\n","  <div id=\"df-03de1bb1-1c3c-4439-87fd-768b424abb9c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Rating</th>\n","      <td>6749.0</td>\n","      <td>4.160142e+00</td>\n","      <td>5.634067e-01</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>4.3</td>\n","      <td>4.5</td>\n","      <td>5.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Reviews</th>\n","      <td>6749.0</td>\n","      <td>1.373932e+05</td>\n","      <td>1.003529e+06</td>\n","      <td>1.0</td>\n","      <td>82.0</td>\n","      <td>1511.0</td>\n","      <td>26875.0</td>\n","      <td>4.488145e+07</td>\n","    </tr>\n","    <tr>\n","      <th>Size</th>\n","      <td>6749.0</td>\n","      <td>3.593306e+01</td>\n","      <td>9.885652e+01</td>\n","      <td>1.0</td>\n","      <td>5.5</td>\n","      <td>14.0</td>\n","      <td>31.0</td>\n","      <td>9.940000e+02</td>\n","    </tr>\n","    <tr>\n","      <th>Installs</th>\n","      <td>6749.0</td>\n","      <td>5.213312e+06</td>\n","      <td>3.606037e+07</td>\n","      <td>1.0</td>\n","      <td>10000.0</td>\n","      <td>100000.0</td>\n","      <td>1000000.0</td>\n","      <td>1.000000e+09</td>\n","    </tr>\n","    <tr>\n","      <th>Type</th>\n","      <td>6749.0</td>\n","      <td>7.438139e-02</td>\n","      <td>2.624100e-01</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>Price</th>\n","      <td>6749.0</td>\n","      <td>1.250329e+00</td>\n","      <td>1.861192e+01</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>4.000000e+02</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-03de1bb1-1c3c-4439-87fd-768b424abb9c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-03de1bb1-1c3c-4439-87fd-768b424abb9c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-03de1bb1-1c3c-4439-87fd-768b424abb9c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0abfaab9-2864-46ca-8410-002279734bf2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0abfaab9-2864-46ca-8410-002279734bf2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0abfaab9-2864-46ca-8410-002279734bf2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_others\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 6749.0,\n        \"max\": 6749.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          6749.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2117817.35903801,\n        \"min\": 0.07438138983553119,\n        \"max\": 5213312.135279301,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          4.160142243295303\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14645138.94629917,\n        \"min\": 0.26240998747524463,\n        \"max\": 36060370.28097272,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.5634067168118176\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5163977794943223,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"25%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4075.137008944198,\n        \"min\": 0.0,\n        \"max\": 10000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          82.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40704.42287780285,\n        \"min\": 0.0,\n        \"max\": 100000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1511.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"75%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 406193.2390963382,\n        \"min\": 0.0,\n        \"max\": 1000000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          26875.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 404981723.9399389,\n        \"min\": 1.0,\n        \"max\": 1000000000.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":622}]},{"cell_type":"code","source":["# Asumiendo que df_game_stats y df_others_stats contienen el resultado de df.describe().T\n","df_game_stats = df_game.describe().T\n","df_others_stats = df_others.describe().T\n","\n","# Características a comparar\n","features = df_game_stats.index\n","\n","# Crear el gráfico\n","x = np.arange(len(features))  # Posiciones de las barras\n","width = 0.35  # Ancho de las barras\n","\n","fig, ax = plt.subplots(figsize=(12, 8))\n","\n","# Barras para el grupo Game\n","bars1 = ax.bar(x - width/2, df_game_stats['mean'], width, label='Game - Mean', yerr=df_game_stats['std'])\n","\n","# Barras para el grupo Others\n","bars2 = ax.bar(x + width/2, df_others_stats['mean'], width, label='Others - Mean', yerr=df_others_stats['std'])\n","\n","# Añadir etiquetas y títulos\n","ax.set_xlabel('Features')\n","ax.set_ylabel('Values')\n","ax.set_title('Comparación de Estadísticas Descriptivas entre Game y Others')\n","ax.set_xticks(x)\n","ax.set_xticklabels(features, rotation=45)\n","ax.legend()\n","\n","# Añadir etiquetas para valores encima de las barras\n","def add_labels(bars):\n","    for bar in bars:\n","        height = bar.get_height()\n","        ax.annotate(f'{height:.2f}', xy=(bar.get_x() + bar.get_width() / 2, height),\n","                    xytext=(0, 3), textcoords=\"offset points\", ha='center', va='bottom')\n","\n","add_labels(bars1)\n","add_labels(bars2)\n","\n","plt.tight_layout()\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"xTMtEnhBkP7i","executionInfo":{"status":"ok","timestamp":1722285031068,"user_tz":240,"elapsed":763,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"c3961de5-4b80-4619-d9d5-f7c3861acf37"},"execution_count":623,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# La cateogria Game obtiene en promedio más reviews y más descargas que el resto de las categorias."],"metadata":{"id":"jkOYFdMxkrJM","executionInfo":{"status":"ok","timestamp":1722285031068,"user_tz":240,"elapsed":36,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":624,"outputs":[]},{"cell_type":"code","source":["genres_distribution_game = df_game['Genres'].value_counts(normalize=True)\n","genres_distribution_others = df_others['Genres'].value_counts(normalize=True)\n","\n","print(f\"Distribución de Géneros para la categoría 'Game':\\n{genres_distribution_game}\")\n","print(f\"Distribución de Géneros para otras categorías:\\n{genres_distribution_others}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NmEMLacXJTtw","executionInfo":{"status":"ok","timestamp":1722285031069,"user_tz":240,"elapsed":37,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"2cdae868-7311-48bf-eb68-c6c7244398c4"},"execution_count":625,"outputs":[{"output_type":"stream","name":"stdout","text":["Distribución de Géneros para la categoría 'Game':\n","Genres\n","Action                           0.330595\n","Arcade                           0.190965\n","Racing                           0.085216\n","Adventure                        0.069815\n","Card                             0.040041\n","Board                            0.039014\n","Casual                           0.035934\n","Puzzle                           0.033881\n","Casino                           0.032854\n","Trivia                           0.027721\n","Word                             0.024641\n","Strategy                         0.022587\n","Role Playing                     0.015400\n","Music                            0.015400\n","Sports                           0.014374\n","Simulation                       0.009240\n","Adventure;Action & Adventure     0.005133\n","Action;Action & Adventure        0.002053\n","Simulation;Education             0.001027\n","Casual;Brain Games               0.001027\n","Simulation;Action & Adventure    0.001027\n","Casual;Pretend Play              0.001027\n","Casual;Creativity                0.001027\n","Name: proportion, dtype: float64\n","Distribución de Géneros para otras categorías:\n","Genres\n","Tools                                0.093792\n","Entertainment                        0.066380\n","Education                            0.061787\n","Medical                              0.048007\n","Lifestyle                            0.041339\n","                                       ...   \n","Entertainment;Education              0.000148\n","Music & Audio;Music & Video          0.000148\n","Arcade;Pretend Play                  0.000148\n","Travel & Local;Action & Adventure    0.000148\n","Strategy;Creativity                  0.000148\n","Name: proportion, Length: 102, dtype: float64\n"]}]},{"cell_type":"code","source":["# La mayoria de los Game se concentran en el genero \"Action\""],"metadata":{"id":"5o4Vj_OCk3SG","executionInfo":{"status":"ok","timestamp":1722285031069,"user_tz":240,"elapsed":30,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":626,"outputs":[]},{"cell_type":"markdown","source":["### Creación del modelo para comprobar nuestra hipotesis."],"metadata":{"id":"SUM7UsSykjtp"}},{"cell_type":"code","source":["df_game_paid = df_game[df_game['Type'] == 1]"],"metadata":{"id":"KDgwOr9D46oC","executionInfo":{"status":"ok","timestamp":1722285031069,"user_tz":240,"elapsed":29,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":627,"outputs":[]},{"cell_type":"code","source":["df_game_paid.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":382},"id":"zByrEZohBtml","executionInfo":{"status":"ok","timestamp":1722285031069,"user_tz":240,"elapsed":28,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"74a641fb-0703-40f7-b2c0-dbff6a0f680f"},"execution_count":628,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                       App Category  Rating  Reviews  Size  Installs  Type  \\\n","1831      The Game of Life     GAME     4.4    18621  63.0    100000     1   \n","1832                  Clue     GAME     4.6    19922  35.0    100000     1   \n","1833    The Room: Old Sins     GAME     4.9    21119  48.0    100000     1   \n","1834         The Escapists     GAME     4.4     7412  84.0    100000     1   \n","1835  Farming Simulator 18     GAME     4.5    18125  15.0    100000     1   \n","\n","      Price Content Rating                Genres    Last Updated  \\\n","1831   2.99       Everyone                 Board    July 4, 2018   \n","1832   1.99   Everyone 10+                 Board   July 30, 2018   \n","1833   4.99       Everyone                Puzzle  April 18, 2018   \n","1834   4.99           Teen              Strategy  April 26, 2018   \n","1835   4.99       Everyone  Simulation;Education    July 9, 2018   \n","\n","             Current Ver Android Ver  \n","1831               2.1.2  4.4 and up  \n","1832               2.2.5  5.0 and up  \n","1833               1.0.1  4.4 and up  \n","1834               1.1.0  2.3 and up  \n","1835  Varies with device  4.4 and up  "],"text/html":["\n","  <div id=\"df-9f4d52d3-0fcd-43c6-8421-30339a95723a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>App</th>\n","      <th>Category</th>\n","      <th>Rating</th>\n","      <th>Reviews</th>\n","      <th>Size</th>\n","      <th>Installs</th>\n","      <th>Type</th>\n","      <th>Price</th>\n","      <th>Content Rating</th>\n","      <th>Genres</th>\n","      <th>Last Updated</th>\n","      <th>Current Ver</th>\n","      <th>Android Ver</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1831</th>\n","      <td>The Game of Life</td>\n","      <td>GAME</td>\n","      <td>4.4</td>\n","      <td>18621</td>\n","      <td>63.0</td>\n","      <td>100000</td>\n","      <td>1</td>\n","      <td>2.99</td>\n","      <td>Everyone</td>\n","      <td>Board</td>\n","      <td>July 4, 2018</td>\n","      <td>2.1.2</td>\n","      <td>4.4 and up</td>\n","    </tr>\n","    <tr>\n","      <th>1832</th>\n","      <td>Clue</td>\n","      <td>GAME</td>\n","      <td>4.6</td>\n","      <td>19922</td>\n","      <td>35.0</td>\n","      <td>100000</td>\n","      <td>1</td>\n","      <td>1.99</td>\n","      <td>Everyone 10+</td>\n","      <td>Board</td>\n","      <td>July 30, 2018</td>\n","      <td>2.2.5</td>\n","      <td>5.0 and up</td>\n","    </tr>\n","    <tr>\n","      <th>1833</th>\n","      <td>The Room: Old Sins</td>\n","      <td>GAME</td>\n","      <td>4.9</td>\n","      <td>21119</td>\n","      <td>48.0</td>\n","      <td>100000</td>\n","      <td>1</td>\n","      <td>4.99</td>\n","      <td>Everyone</td>\n","      <td>Puzzle</td>\n","      <td>April 18, 2018</td>\n","      <td>1.0.1</td>\n","      <td>4.4 and up</td>\n","    </tr>\n","    <tr>\n","      <th>1834</th>\n","      <td>The Escapists</td>\n","      <td>GAME</td>\n","      <td>4.4</td>\n","      <td>7412</td>\n","      <td>84.0</td>\n","      <td>100000</td>\n","      <td>1</td>\n","      <td>4.99</td>\n","      <td>Teen</td>\n","      <td>Strategy</td>\n","      <td>April 26, 2018</td>\n","      <td>1.1.0</td>\n","      <td>2.3 and up</td>\n","    </tr>\n","    <tr>\n","      <th>1835</th>\n","      <td>Farming Simulator 18</td>\n","      <td>GAME</td>\n","      <td>4.5</td>\n","      <td>18125</td>\n","      <td>15.0</td>\n","      <td>100000</td>\n","      <td>1</td>\n","      <td>4.99</td>\n","      <td>Everyone</td>\n","      <td>Simulation;Education</td>\n","      <td>July 9, 2018</td>\n","      <td>Varies with device</td>\n","      <td>4.4 and up</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f4d52d3-0fcd-43c6-8421-30339a95723a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9f4d52d3-0fcd-43c6-8421-30339a95723a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9f4d52d3-0fcd-43c6-8421-30339a95723a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fdacec90-9f02-4d92-93c4-3d8ee32bb1af\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fdacec90-9f02-4d92-93c4-3d8ee32bb1af')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fdacec90-9f02-4d92-93c4-3d8ee32bb1af button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_game_paid","repr_error":"0"}},"metadata":{},"execution_count":628}]},{"cell_type":"code","source":["# Para nuestro modelo solo vamos a trabajar con las siguientes columnas :  ['Rating', 'Reviews', 'Size', 'Installs', 'Type', 'Content Rating']\n","# Dropeamos el resto.\n","# Además, solo vamos a trabajar con las aplicaciones de pago\n","\n","columns_to_keep = ['Rating', 'Reviews', 'Size', 'Installs', 'Content Rating', 'Price', 'Type']\n","df_game_paid = df[columns_to_keep]\n","\n"],"metadata":{"id":"7pYbwwhGJ76s","executionInfo":{"status":"ok","timestamp":1722285031070,"user_tz":240,"elapsed":27,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":629,"outputs":[]},{"cell_type":"code","source":["df_game_paid.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"yJ5LAfCPlmFL","executionInfo":{"status":"ok","timestamp":1722285031070,"user_tz":240,"elapsed":26,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"123574ab-634a-41e1-f609-48a4841d204a"},"execution_count":630,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Rating  Reviews  Size  Installs Content Rating  Price  Type\n","0     4.1      159  19.0     10000       Everyone    0.0     0\n","1     3.9      967  14.0    500000       Everyone    0.0     0\n","2     4.7    87510   8.7   5000000       Everyone    0.0     0\n","3     4.5   215644  25.0  50000000           Teen    0.0     0\n","4     4.3      967   2.8    100000       Everyone    0.0     0"],"text/html":["\n","  <div id=\"df-179f37ad-d633-4d07-b1b4-805008fda86c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rating</th>\n","      <th>Reviews</th>\n","      <th>Size</th>\n","      <th>Installs</th>\n","      <th>Content Rating</th>\n","      <th>Price</th>\n","      <th>Type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4.1</td>\n","      <td>159</td>\n","      <td>19.0</td>\n","      <td>10000</td>\n","      <td>Everyone</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3.9</td>\n","      <td>967</td>\n","      <td>14.0</td>\n","      <td>500000</td>\n","      <td>Everyone</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>87510</td>\n","      <td>8.7</td>\n","      <td>5000000</td>\n","      <td>Everyone</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.5</td>\n","      <td>215644</td>\n","      <td>25.0</td>\n","      <td>50000000</td>\n","      <td>Teen</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4.3</td>\n","      <td>967</td>\n","      <td>2.8</td>\n","      <td>100000</td>\n","      <td>Everyone</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-179f37ad-d633-4d07-b1b4-805008fda86c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-179f37ad-d633-4d07-b1b4-805008fda86c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-179f37ad-d633-4d07-b1b4-805008fda86c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ee2890d9-6e40-44e3-b4b1-69e3dff0f92a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ee2890d9-6e40-44e3-b4b1-69e3dff0f92a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ee2890d9-6e40-44e3-b4b1-69e3dff0f92a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_game_paid","summary":"{\n  \"name\": \"df_game_paid\",\n  \"rows\": 7723,\n  \"fields\": [\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5446382377975154,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          2.4,\n          1.4,\n          4.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1863933,\n        \"min\": 1,\n        \"max\": 44893888,\n        \"num_unique_values\": 4669,\n        \"samples\": [\n          1555,\n          26252,\n          165888\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 93.54222986956422,\n        \"min\": 1.0,\n        \"max\": 994.0,\n        \"num_unique_values\": 376,\n        \"samples\": [\n          963.0,\n          376.0,\n          721.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Installs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 50157415,\n        \"min\": 1,\n        \"max\": 1000000000,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          10000,\n          50000,\n          500000000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Content Rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Everyone\",\n          \"Teen\",\n          \"Unrated\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.408036412586156,\n        \"min\": 0.0,\n        \"max\": 400.0,\n        \"num_unique_values\": 68,\n        \"samples\": [\n          37.99,\n          16.99,\n          3.99\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":630}]},{"cell_type":"code","source":["df_game_paid = df_game_paid[df_game_paid['Type'] == 1]"],"metadata":{"id":"KGe5FParEPqD","executionInfo":{"status":"ok","timestamp":1722285031070,"user_tz":240,"elapsed":24,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":631,"outputs":[]},{"cell_type":"code","source":["df_game_paid.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"z0XCXhFFEWM9","executionInfo":{"status":"ok","timestamp":1722285031070,"user_tz":240,"elapsed":24,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"3bc125a8-8022-47ef-8d27-3ebdc9ffc983"},"execution_count":632,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Rating  Reviews  Size  Installs Content Rating  Price  Type\n","234     4.7    11442   6.8    100000       Everyone   4.99     1\n","235     4.8    10295  39.0    100000       Everyone   4.99     1\n","290     4.7    11442   6.8    100000       Everyone   4.99     1\n","291     4.8    10295  39.0    100000       Everyone   4.99     1\n","477     2.6       57   6.2      1000       Everyone   6.99     1"],"text/html":["\n","  <div id=\"df-88ebc0e1-448e-47e7-b5f9-aeff98e69b02\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rating</th>\n","      <th>Reviews</th>\n","      <th>Size</th>\n","      <th>Installs</th>\n","      <th>Content Rating</th>\n","      <th>Price</th>\n","      <th>Type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>234</th>\n","      <td>4.7</td>\n","      <td>11442</td>\n","      <td>6.8</td>\n","      <td>100000</td>\n","      <td>Everyone</td>\n","      <td>4.99</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>235</th>\n","      <td>4.8</td>\n","      <td>10295</td>\n","      <td>39.0</td>\n","      <td>100000</td>\n","      <td>Everyone</td>\n","      <td>4.99</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>290</th>\n","      <td>4.7</td>\n","      <td>11442</td>\n","      <td>6.8</td>\n","      <td>100000</td>\n","      <td>Everyone</td>\n","      <td>4.99</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>291</th>\n","      <td>4.8</td>\n","      <td>10295</td>\n","      <td>39.0</td>\n","      <td>100000</td>\n","      <td>Everyone</td>\n","      <td>4.99</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>477</th>\n","      <td>2.6</td>\n","      <td>57</td>\n","      <td>6.2</td>\n","      <td>1000</td>\n","      <td>Everyone</td>\n","      <td>6.99</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-88ebc0e1-448e-47e7-b5f9-aeff98e69b02')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-88ebc0e1-448e-47e7-b5f9-aeff98e69b02 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-88ebc0e1-448e-47e7-b5f9-aeff98e69b02');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6dec251b-65cc-4e1e-a564-e159530d048a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6dec251b-65cc-4e1e-a564-e159530d048a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6dec251b-65cc-4e1e-a564-e159530d048a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_game_paid","summary":"{\n  \"name\": \"df_game_paid\",\n  \"rows\": 577,\n  \"fields\": [\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5563674682912104,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          3.1,\n          3.8,\n          2.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29002,\n        \"min\": 1,\n        \"max\": 408292,\n        \"num_unique_values\": 364,\n        \"samples\": [\n          36,\n          2195,\n          18125\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 140.28200137142122,\n        \"min\": 1.0,\n        \"max\": 965.0,\n        \"num_unique_values\": 188,\n        \"samples\": [\n          376.0,\n          9.3,\n          60.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Installs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 459472,\n        \"min\": 1,\n        \"max\": 10000000,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          50,\n          10000000,\n          100000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Content Rating\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Mature 17+\",\n          \"Teen\",\n          \"Everyone\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62.058665074828994,\n        \"min\": 0.99,\n        \"max\": 400.0,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          1.76,\n          14.99,\n          5.99\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":632}]},{"cell_type":"code","source":["df_game_paid.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DAVb3ULO5JBh","executionInfo":{"status":"ok","timestamp":1722285031071,"user_tz":240,"elapsed":23,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"c34219c6-c924-4d28-bbc4-9008dee26522"},"execution_count":633,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 577 entries, 234 to 10785\n","Data columns (total 7 columns):\n"," #   Column          Non-Null Count  Dtype  \n","---  ------          --------------  -----  \n"," 0   Rating          577 non-null    float64\n"," 1   Reviews         577 non-null    int64  \n"," 2   Size            577 non-null    float64\n"," 3   Installs        577 non-null    int64  \n"," 4   Content Rating  577 non-null    object \n"," 5   Price           577 non-null    float64\n"," 6   Type            577 non-null    int64  \n","dtypes: float64(3), int64(3), object(1)\n","memory usage: 36.1+ KB\n"]}]},{"cell_type":"code","source":["# One-Hot Encoding para 'Content Rating'\n","df_game_paid = pd.get_dummies(df_game_paid, columns=['Content Rating'], drop_first=True)\n"],"metadata":{"id":"Zj9tlfZFuRPs","executionInfo":{"status":"ok","timestamp":1722285031429,"user_tz":240,"elapsed":375,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":634,"outputs":[]},{"cell_type":"code","source":["# Manejo de datos numéricos\n","# Seleccionar todas las columnas menos 'Price' y 'Type'\n","X = df_game_paid.drop(['Price', 'Type'], axis=1)\n","y = df_game_paid['Price']"],"metadata":{"id":"D4MCFg_nuRJe","executionInfo":{"status":"ok","timestamp":1722285031430,"user_tz":240,"elapsed":15,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":635,"outputs":[]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":478},"id":"VbCOsr52LZ2A","executionInfo":{"status":"ok","timestamp":1722285031430,"user_tz":240,"elapsed":14,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"502d4831-36de-4376-b7b9-a49711292fcf"},"execution_count":636,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Rating  Reviews   Size  Installs  Content Rating_Everyone 10+  \\\n","234       4.7    11442    6.8    100000                        False   \n","235       4.8    10295   39.0    100000                        False   \n","290       4.7    11442    6.8    100000                        False   \n","291       4.8    10295   39.0    100000                        False   \n","477       2.6       57    6.2      1000                        False   \n","...       ...      ...    ...       ...                          ...   \n","10690     5.0        5  861.0       100                        False   \n","10697     5.0        2   16.0         1                        False   \n","10760     4.4       35    2.4      1000                        False   \n","10782     3.8      252   11.0     10000                        False   \n","10785     4.2     1405    9.5     10000                        False   \n","\n","       Content Rating_Mature 17+  Content Rating_Teen  \n","234                        False                False  \n","235                        False                False  \n","290                        False                False  \n","291                        False                False  \n","477                        False                False  \n","...                          ...                  ...  \n","10690                      False                False  \n","10697                      False                False  \n","10760                      False                False  \n","10782                      False                 True  \n","10785                      False                False  \n","\n","[577 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-2e31382e-617a-47d2-8826-079315b32f9d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rating</th>\n","      <th>Reviews</th>\n","      <th>Size</th>\n","      <th>Installs</th>\n","      <th>Content Rating_Everyone 10+</th>\n","      <th>Content Rating_Mature 17+</th>\n","      <th>Content Rating_Teen</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>234</th>\n","      <td>4.7</td>\n","      <td>11442</td>\n","      <td>6.8</td>\n","      <td>100000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>235</th>\n","      <td>4.8</td>\n","      <td>10295</td>\n","      <td>39.0</td>\n","      <td>100000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>290</th>\n","      <td>4.7</td>\n","      <td>11442</td>\n","      <td>6.8</td>\n","      <td>100000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>291</th>\n","      <td>4.8</td>\n","      <td>10295</td>\n","      <td>39.0</td>\n","      <td>100000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>477</th>\n","      <td>2.6</td>\n","      <td>57</td>\n","      <td>6.2</td>\n","      <td>1000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10690</th>\n","      <td>5.0</td>\n","      <td>5</td>\n","      <td>861.0</td>\n","      <td>100</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>10697</th>\n","      <td>5.0</td>\n","      <td>2</td>\n","      <td>16.0</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>10760</th>\n","      <td>4.4</td>\n","      <td>35</td>\n","      <td>2.4</td>\n","      <td>1000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>10782</th>\n","      <td>3.8</td>\n","      <td>252</td>\n","      <td>11.0</td>\n","      <td>10000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>10785</th>\n","      <td>4.2</td>\n","      <td>1405</td>\n","      <td>9.5</td>\n","      <td>10000</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>577 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e31382e-617a-47d2-8826-079315b32f9d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2e31382e-617a-47d2-8826-079315b32f9d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2e31382e-617a-47d2-8826-079315b32f9d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5d8fc291-367e-4e98-a142-2461a06a8c1e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5d8fc291-367e-4e98-a142-2461a06a8c1e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5d8fc291-367e-4e98-a142-2461a06a8c1e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_11200cfd-a419-481c-886a-8852a41f0cf1\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_11200cfd-a419-481c-886a-8852a41f0cf1 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X","summary":"{\n  \"name\": \"X\",\n  \"rows\": 577,\n  \"fields\": [\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5563674682912104,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          3.1,\n          3.8,\n          2.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29002,\n        \"min\": 1,\n        \"max\": 408292,\n        \"num_unique_values\": 364,\n        \"samples\": [\n          36,\n          2195,\n          18125\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 140.28200137142122,\n        \"min\": 1.0,\n        \"max\": 965.0,\n        \"num_unique_values\": 188,\n        \"samples\": [\n          376.0,\n          9.3,\n          60.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Installs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 459472,\n        \"min\": 1,\n        \"max\": 10000000,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          50,\n          10000000,\n          100000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Content Rating_Everyone 10+\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Content Rating_Mature 17+\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Content Rating_Teen\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":636}]},{"cell_type":"code","source":["# División en conjuntos de entrenamiento y prueba\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n"],"metadata":{"id":"C6E5QuYvuX1t","executionInfo":{"status":"ok","timestamp":1722285031430,"user_tz":240,"elapsed":11,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":637,"outputs":[]},{"cell_type":"code","source":["# Escalar las características\n","scaler = StandardScaler()\n","X_train = scaler.fit_transform(X_train)\n","X_test = scaler.transform(X_test)"],"metadata":{"id":"rA8emPpB1oy4","executionInfo":{"status":"ok","timestamp":1722285031431,"user_tz":240,"elapsed":12,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":638,"outputs":[]},{"cell_type":"code","source":["# Definir los modelos\n","models = {\n","    'Random Forest': RandomForestRegressor(),\n","    'Gradient Boosting': GradientBoostingRegressor(),\n","    'AdaBoost': AdaBoostRegressor()\n","}\n"],"metadata":{"id":"30uuNzzDFUCb","executionInfo":{"status":"ok","timestamp":1722285031431,"user_tz":240,"elapsed":11,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":639,"outputs":[]},{"cell_type":"code","source":["# Definir parámetros para GridSearchCV\n","param_grids = {\n","    'Random Forest': {\n","        'n_estimators': [100, 200],\n","        'max_depth': [None, 10, 20]\n","    },\n","    'Gradient Boosting': {\n","        'n_estimators': [100, 200],\n","        'learning_rate': [0.01, 0.1, 0.2],\n","        'max_depth': [3, 5, 7]\n","    },\n","    'AdaBoost': {\n","        'n_estimators': [50, 100, 200]\n","    }\n","}"],"metadata":{"id":"JlK_1CE9FyFr","executionInfo":{"status":"ok","timestamp":1722285031432,"user_tz":240,"elapsed":12,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":640,"outputs":[]},{"cell_type":"code","source":["# Entrenar y ajustar modelos\n","best_models = {}\n","for name, model in models.items():\n","    grid_search = GridSearchCV(model, param_grids[name], cv=5, scoring='neg_mean_squared_error')\n","    grid_search.fit(X_train, y_train)\n","    best_models[name] = grid_search.best_estimator_\n","\n","    # Imprimir los mejores parámetros encontrados\n","    print(f\"Mejores parámetros para {name}: {grid_search.best_params_}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BqCBc25uGAEX","executionInfo":{"status":"ok","timestamp":1722285061311,"user_tz":240,"elapsed":29890,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"c3386e30-8813-456d-b4ac-a481bc1c20e4"},"execution_count":641,"outputs":[{"output_type":"stream","name":"stdout","text":["Mejores parámetros para Random Forest: {'max_depth': None, 'n_estimators': 200}\n","Mejores parámetros para Gradient Boosting: {'learning_rate': 0.01, 'max_depth': 3, 'n_estimators': 100}\n","Mejores parámetros para AdaBoost: {'n_estimators': 50}\n"]}]},{"cell_type":"code","source":["# Mejores parámetros para Random Forest: {'max_depth': None, 'n_estimators': 200}\n","# Mejores parámetros para Gradient Boosting: {'learning_rate': 0.01, 'max_depth': 3, 'n_estimators': 100}\n","# Mejores parámetros para AdaBoost: {'n_estimators': 50}"],"metadata":{"id":"jBOzpmjGGCUi","executionInfo":{"status":"ok","timestamp":1722285061311,"user_tz":240,"elapsed":7,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":642,"outputs":[]},{"cell_type":"code","source":["# Evaluar modelos\n","results = {}\n","for name, model in best_models.items():\n","    y_pred = model.predict(X_test)\n","    mse = mean_squared_error(y_test, y_pred)\n","    r2 = r2_score(y_test, y_pred)\n","    results[name] = {'MSE': mse, 'R2': r2}\n","\n","    # Graficar las predicciones frente a los valores reales\n","    plt.figure(figsize=(12, 6))\n","    plt.scatter(y_test, y_pred, alpha=0.7, edgecolors=\"w\", linewidth=0.5)\n","    plt.xlabel('Valores Reales')\n","    plt.ylabel('Predicciones')\n","    plt.title(f'Predicciones vs Valores Reales - {name}')\n","    plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'k--', lw=2)\n","    plt.grid(True)\n","    plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"sWGqtkK-GOk9","executionInfo":{"status":"ok","timestamp":1722285062724,"user_tz":240,"elapsed":1418,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"46e58434-2826-4f25-ac0f-a2569dc678b8"},"execution_count":643,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"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gapfv76ku+H51Vdf1S+//KKuXbuqRIkS2rdvnyZPnqy///7bfJzrgQMH1KhRI5UqVUojR46Uq6urjh07pl9//fWBr0XLli01YsQIXbp0yWL37F9++UUXLlww77YeERGhN998U7Vq1dIHH3wgSTp06JB+/fVX82t2L1WrVlWePHm0ePFi9evXz2Ju8eLF8vDwMO/yO2vWLJUsWVKvvvqqMmXKpFWrVundd99VcnLyA7d03rlzR9WrV9exY8fUo0cPFShQQMuWLVP79u0VGRmZqr758+crLi5OXbt2laurq7JmzaoDBw6ocuXKyp07twYPHixPT099/fXXeu211/TNN9/o9ddfl3S3v+PGjVPnzp1VoUIFRUdHa9euXfrjjz9Up06dB77W95ISIJ977jnz2OXLl1WxYkU5ODioR48eyp49u3788Ud16tRJ0dHR6tOnjyQpOjpan376qd5880116dJFt27d0rx581S3bl39/vvvKlOmzH0fN62P8cknn6hXr15q3ry5evfurbi4OO3du1c7duzQW2+99dDP90GWLFkiT09PNWrUSO7u7ipUqJC+/PJLVapUyWJd586d9cUXX+itt95SpUqVtHHjRjVs2DDV/e3cuVPbtm1Tq1atlCdPHp06dUqzZs1S9erVdfDgwVSH6ty6dUvXrl2TJN24cUOLFy/W/v37NW/evFSPv3DhQjVv3lzvvfeeduzYoXHjxunQoUP69ttvzevS8rcgISFBdevWVXx8vHr27Ck/Pz+dP39eq1evVmRkpLJkyaJFixaZf9+6du0qSSpUqFCGvOYA8EQYAACbMX/+fEOSsWHDBuPq1avG2bNnja+++srIli2b4e7ubpw7d84wDMNo166dIckYPHiwxc///PPPhiTjyy+/tBhfu3atxfiVK1cMFxcXo2HDhkZycrJ53dChQw1JRrt27cxjmzZtMiQZmzZtMgzDMBITE40CBQoY+fLlM27evGnxOP+8r6pVqxqZM2c2Tp8+fd81Kc/35MmTFnUFBwcbSUlJ5nUff/yxIcn47LPPzGPVqlUzJBmff/65eSw+Pt7w8/MzmjVrZh5btGiR4ejoaPz8888WdcyePduQZPz666+GYRjG5MmTDUnG1atXjYdx5MgRQ5Ixffp0i/F3333X8PLyMmJjYw3DMIzevXsb3t7eRmJi4kPdv2EYxoABAwxJ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l+rEdvd6vml5jBIlSujIkSNavXq11q5dq2+++UYzZ85UaGiowsPD7/sYOXPmtLg9f/78+548zTAMLVmyRLdv31ZAQECq+StXrigmJkZeXl73fbx76dmzp+bPn68+ffooKChIWbJkkYODg1q1apXm36datWpp9erV+v333y2Om3/QHjcP66OPPlL79u3Nv1O9evXSuHHj9Ntvv6X6YBMA7BGhHQCeIoUKFdKGDRtUuXLlVMHqn/Llyyfp7lboggULmsevXr2a6izz93oMSdq/f785PP1byn3u37//oepPqevIkSMWdSUkJOjkyZP3fbz/qvevv/5SrVq1/jMoODo6qlatWqpVq5YmTZqksWPH6v3339emTZse+NgFChRQhQoVtHTpUvXo0UMrVqzQa6+9lur68y4uLmrcuLEaN26s5ORkvfvuu5ozZ46GDx+easvjv7355psaMmSIFi9erHz58ikpKcli1/hVq1YpPj5e33//vcUhCWk5E3q+fPm0d+9eJScnW3wQdPjwYfP8g6T0ytnZOU09ypo1qzp06KAOHTooJiZGVatW1YgRI9IU2v9t/Pjx+vbbbzVmzBjNnj3bfEb0pKSk/6xl+fLlKliwoFasWGHxu5Gyd8D9PMxjSJKnp6datmypli1bKiEhQU2bNtWYMWM0ZMiQ+15O8d+HUZQsWfK+979lyxadO3dOI0eONO8dkeLmzZvq2rWrvvvuO7Vp00b58uVTcnKyjh8/brEV+8iRI6nud/ny5WrXrp0++ugj81hcXFyqs7c/SGJioiQpJiZGksyPf/ToUYtaL1++rMjISPPv2sP+LQgMDFRgYKCGDRumbdu2qXLlypo9e7b5kncZ+SEBADxp7B4PAE+RFi1aKCkpSaNGjUo1l5iYaP7Pdu3ateXs7Kzp06dbbJWeMmXKfz7Giy++qAIFCmjKlCmp/vOecl/Zs2dX1apV9dlnn+nMmTP3XHMvtWvXlouLi6ZNm2axbt68eYqKirrnGa7/S4sWLXT+/Hl98sknqebu3Lmj27dvS7p7XPa/pZw9/F6Xovq3li1b6rffftNnn32ma9euWewaL0nXr1+3uO3o6GjeGpuW+8+bN69eeeUVLV26VF988YUKFChgcVbwlD0B/vm6RUVFaf78+f953w0aNNClS5csjstPTEzU9OnT5eXlpWrVqj3w5319fVW9enXN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J/L09MSUKVOQlZWF8vJyzJo1S+qLiYlBTk4Odu/ejSNHjuDhhx9GZWVll2PFxMQgIyMDc+fOxa5du/Ddd99h+vTpCA0NRUZGRpf7xcbGYtq0aZgxYwbef/99lJSUYM+ePVi5ciU2bdoEAFi4cCG++OILlJSUYP/+/di+fTuGDx9+TXN9+OGHcezYMfzvf//r0TGvdf59NQ8iIqK+xKKdiIjIyebMmYPa2lqkpaUhJCREan/66adx0003IS0tDRMmTEBQUBDuvvvuq461bt06jB49GnfeeSeSk5MhhMDmzZuhVqu73W/GjBlYvHgx4uLicPfdd2Pv3r0IDw8HcOH+8szMTAwfPhzp6emIjY3F66+/fk3zNBqNmDFjBlasWAG73d7tMX/s/Ht7HkRERH1JIcRl3zNDRERERERERLLBM+1EREREREREMsWinYiIiIiIiEimWLQTERERERERyRSLdiIiIiIiIiKZYtFOREREREREJFMs2omIiIiIiIhkikU7ERERERERkUyxaCciIiIiIiKSKRbtRERERERERDLFop2IiIiIiIhIpli0ExEREREREcnU/wdKGSFY6h1tEwAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["# Imprimir resultados de rendimiento\n","print(\"Resultados de rendimiento de los modelos:\")\n","for name, metrics in results.items():\n","    print(f\"\\nModelo: {name}\")\n","    print(f\"Mean Squared Error (MSE): {metrics['MSE']}\")\n","    print(f\"R-squared (R2): {metrics['R2']}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W5TlEbZ8GT4Q","executionInfo":{"status":"ok","timestamp":1722285062725,"user_tz":240,"elapsed":7,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"b462a369-5fa9-443b-e40d-e31ef8e36ea8"},"execution_count":644,"outputs":[{"output_type":"stream","name":"stdout","text":["Resultados de rendimiento de los modelos:\n","\n","Modelo: Random Forest\n","Mean Squared Error (MSE): 5179.908772625926\n","R-squared (R2): -0.003611906525991193\n","\n","Modelo: Gradient Boosting\n","Mean Squared Error (MSE): 5080.810097419081\n","R-squared (R2): 0.015588549451947431\n","\n","Modelo: AdaBoost\n","Mean Squared Error (MSE): 6400.069369889761\n","R-squared (R2): -0.24001910152511519\n"]}]},{"cell_type":"code","source":["# Este modelo tiene el MSE más bajo entre los tres, lo que significa que, en promedio, sus predicciones están más cerca de los valores reales que las de los otros modelos. Aunque el R² es muy bajo y aún negativo, el modelo está funcionando ligeramente mejor que Random Forest en términos de MSE."],"metadata":{"id":"0HKAlk4yIdA0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# # Entrenar el modelo (ejemplo)\n","# Mejores parámetros para Gradient Boosting: {'learning_rate': 0.01, 'max_depth': 3, 'n_estimators': 100}\n","\n","best_models = GradientBoostingRegressor(n_estimators=100, learning_rate=0.01, max_depth=3)\n","best_models.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"JAJ3XTQ0MOrb","executionInfo":{"status":"ok","timestamp":1722285149160,"user_tz":240,"elapsed":311,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"d3e6e387-616f-468b-ef9f-e2bd260c6125"},"execution_count":649,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GradientBoostingRegressor(learning_rate=0.01)"],"text/html":["<style>#sk-container-id-1 {color: black;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GradientBoostingRegressor(learning_rate=0.01)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GradientBoostingRegressor</label><div class=\"sk-toggleable__content\"><pre>GradientBoostingRegressor(learning_rate=0.01)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":649}]},{"cell_type":"code","source":["# Probamos el modelo con una predicción."],"metadata":{"id":"V0AJhTgQGipc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_ficticios = {\n","    'Rating': [3.8],  # Ejemplos de ratings\n","    'Reviews': [5200],  # Ejemplos de reviews\n","    'Size': [48.0],  # Ejemplos de tamaño en MB\n","    'Installs': [500000],  # Ejemplos de instalaciones\n","    'Content Rating_Everyone 10+': [0],  # Ejemplos de codificación one-hot\n","    'Content Rating_Mature 17+': [1],\n","    'Content Rating_Teen': [0]\n","}"],"metadata":{"id":"W7NhaTc7JcO2","executionInfo":{"status":"ok","timestamp":1722285260648,"user_tz":240,"elapsed":359,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":655,"outputs":[]},{"cell_type":"code","source":["# Crear DataFrame para los datos ficticios\n","df_ficticios = pd.DataFrame(data_ficticios)"],"metadata":{"id":"3TokAr8pJzd4","executionInfo":{"status":"ok","timestamp":1722285262997,"user_tz":240,"elapsed":2,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":656,"outputs":[]},{"cell_type":"code","source":["# Escalar las características de los datos ficticios usando el mismo escalador\n","scaler = StandardScaler()\n","X_ficticios = scaler.fit_transform(df_ficticios)"],"metadata":{"id":"XuUqXcjYJ1aM","executionInfo":{"status":"ok","timestamp":1722285263467,"user_tz":240,"elapsed":3,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}}},"execution_count":657,"outputs":[]},{"cell_type":"code","source":["# Realizar la predicción con el modelo entrenado\n","predicciones = best_models.predict(X_ficticios)\n","\n","# Mostrar las predicciones\n","print(\"Predicciones para datos ficticios:\")\n","print(predicciones)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kVc0lbXNJ3rg","executionInfo":{"status":"ok","timestamp":1722285264654,"user_tz":240,"elapsed":4,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"c5d89af9-b968-4fe6-c346-f8f9beb4f022"},"execution_count":658,"outputs":[{"output_type":"stream","name":"stdout","text":["Predicciones para datos ficticios:\n","[8.16123987]\n"]}]},{"cell_type":"code","source":["\n","# Guardar el modelo\n","joblib.dump(best_models, 'best_models.pkl')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CEXG4IjIJ5fo","executionInfo":{"status":"ok","timestamp":1722285179199,"user_tz":240,"elapsed":291,"user":{"displayName":"carlos muller","userId":"16153721127114550338"}},"outputId":"696c4b72-972d-4ea0-966c-48e76bf0f28e"},"execution_count":654,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['best_models.pkl']"]},"metadata":{},"execution_count":654}]},{"cell_type":"code","source":[],"metadata":{"id":"iJTCNkjpKzDX"},"execution_count":null,"outputs":[]}]}